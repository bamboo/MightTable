var _$0;
_$0: {
    module.exports = function (ast) {
        var composeMacroArguments, _$1, _$2, _$3, _$4, _$5, _$6, _$7, _$8, _$9, _$10, _$11, _$12, _$13, _$14, _$15;
        _$2: {
            _$3: {
                composeMacroArguments = function (nameArg, argsTuple) {
                    var nameValue, ok, name, arity, precedence, options, index, arg, simpleValue, skip, property, value, propertyName, simplePropertyValue, func, macroBody, macroArgs, argIndex, macroArg, argDeclaration, _$4, _$5, _$6, _$7, _$8, _$9, _$10, _$11, _$12, _$13, _$14, _$15, _$16, _$17, _$18, _$19, _$20, _$21, _$22;
                    _$5: {
                        nameValue = nameArg.getSimpleValue();
                        if (nameValue === null) {
                            _$6: {
                                argsTuple.error('Invalid name argument');
                                return null;
                            }
                        }
                        if (!argsTuple.isTuple()) {
                            _$7: {
                                argsTuple.error('Expected tuple argument');
                                return null;
                            }
                        }
                        _$8: {
                            ok = true;
                            name = nameArg.newValue(nameValue);
                            arity = ast.newValue('unary');
                            precedence = ast.newValue('LOW');
                            options = ast.newObjectLiteral();
                        }
                        index = 0;
                        _$9:
                            while (true) {
                                if (index < argsTuple.count) {
                                    _$10: {
                                        arg = argsTuple.at(index);
                                        simpleValue = arg.getSimpleValue();
                                        if (simpleValue !== null) {
                                            if (index === 0) {
                                                arity = arg.newValue(simpleValue);
                                            } else {
                                                if (index === 1) {
                                                    precedence = arg.newValue(simpleValue);
                                                } else {
                                                    _$11: {
                                                        arg.error('Invalid simple property');
                                                        ok = false;
                                                    }
                                                }
                                            }
                                        } else {
                                            if (arg.isProperty()) {
                                                _$12: {
                                                    skip = false;
                                                    property = arg.copy();
                                                    value = property.at(1);
                                                    propertyName = property.at(0).getSimpleValue();
                                                    simplePropertyValue = value.getSimpleValue();
                                                    if (propertyName === 'arity' && simplePropertyValue !== null) {
                                                        _$13: {
                                                            arity = arg.newValue(simplePropertyValue);
                                                            skip = true;
                                                        }
                                                    } else {
                                                        if (propertyName === 'precedence' && simplePropertyValue !== null) {
                                                            _$14: {
                                                                precedence = arg.newValue(simplePropertyValue);
                                                                skip = true;
                                                            }
                                                        } else {
                                                            if (value.isFunctionDefinition()) {
                                                                _$15: {
                                                                    func = value.copy();
                                                                    macroBody = func.pop().asTuple();
                                                                    macroArgs = func.pop().asTuple();
                                                                    func.push(arg.newTag('ast'));
                                                                    func.push(macroBody);
                                                                    argIndex = 0;
                                                                    _$16:
                                                                        while (true) {
                                                                            if (argIndex < macroArgs.count) {
                                                                                _$17: {
                                                                                    macroArg = macroArgs.at(argIndex);
                                                                                    if (macroArg.isTag()) {
                                                                                        _$18: {
                                                                                            argDeclaration = ast.fromJsonString('{"id":"=","kind":"builtin","val":"=","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":54,"column":60},"end":{"line":54,"column":60}},"args":[{"id":"<tagDeclaration>","kind":"tag","val":"__argName","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":54,"column":46},"end":{"line":54,"column":50}},"args":[]},{"id":"<call>","kind":"builtin","val":null,"loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":54,"column":69},"end":{"line":54,"column":69}},"args":[{"id":".","kind":"builtin","val":".","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":54,"column":65},"end":{"line":54,"column":65}},"args":[{"id":"<tag>","kind":"tag","val":"ast","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":54,"column":62},"end":{"line":54,"column":62}},"args":[]},{"id":"<name>","kind":"tag","val":"at","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":54,"column":66},"end":{"line":54,"column":66}},"args":[]}]},{"id":"<tag>","kind":"tag","val":"__argIndex","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":54,"column":69},"end":{"line":54,"column":69}},"args":[]}]}]}');
                                                                                            argDeclaration.replaceTag('__argName', macroArg.newTag(macroArg.getTag()).handleAsTagDeclaration());
                                                                                            argDeclaration.replaceTag('__argIndex', macroArg.newValue(argIndex));
                                                                                            macroBody.unshift(argDeclaration);
                                                                                        }
                                                                                    } else {
                                                                                        _$19: {
                                                                                            macroArg.error('Argument name expected');
                                                                                            ok = false;
                                                                                        }
                                                                                    }
                                                                                    argIndex = argIndex + 1;
                                                                                    continue;
                                                                                }
                                                                            }
                                                                            break _$16;
                                                                        }
                                                                    if (ok) {
                                                                        _$20: {
                                                                            property.pop();
                                                                            property.push(func);
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                    if (!skip) {
                                                        options.push(property);
                                                    }
                                                }
                                            } else {
                                                _$21: {
                                                    arg.error('Invalid property');
                                                    ok = false;
                                                }
                                            }
                                        }
                                        index = index + 1;
                                        continue;
                                    }
                                }
                                break _$9;
                            }
                        if (ok) {
                            _$22 = [
                                name,
                                arity,
                                precedence,
                                options
                            ];
                        } else {
                            _$22 = null;
                        }
                        _$4 = _$22;
                        break _$5;
                    }
                    return _$4;
                };
                ast.defineSymbol(ast.createMacro('#exec-meta', 'unary', 'LOW', {
                    'postCombine': function (ast) {
                        var code, innerDo, _$4, _$5;
                        _$5: {
                            code = ast.at(0).copy();
                            innerDo = ast.newDo([
                                code.copy(),
                                ast.newTag('null')
                            ]);
                            _$4 = ast.newMeta(innerDo);
                            break _$5;
                        }
                        return _$4;
                    }
                }));
                ast.defineSymbol(ast.createMacro('#keep-meta', 'unary', 'LOW', {
                    'postCombine': function (ast) {
                        var code, tail, innerDo, _$4, _$5;
                        _$5: {
                            code = ast.at(0).copy();
                            tail = ast.fromJsonString('{"id":"<call>","kind":"builtin","val":null,"loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":92,"column":28},"end":{"line":92,"column":51}},"args":[{"id":".","kind":"builtin","val":".","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":92,"column":44},"end":{"line":92,"column":44}},"args":[{"id":"<call>","kind":"builtin","val":null,"loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":92,"column":41},"end":{"line":92,"column":43}},"args":[{"id":".","kind":"builtin","val":".","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":92,"column":38},"end":{"line":92,"column":38}},"args":[{"id":"<call>","kind":"builtin","val":null,"loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":92,"column":35},"end":{"line":92,"column":37}},"args":[{"id":".","kind":"builtin","val":".","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":92,"column":32},"end":{"line":92,"column":32}},"args":[{"id":"<tag>","kind":"tag","val":"ast","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":92,"column":29},"end":{"line":92,"column":29}},"args":[]},{"id":"<name>","kind":"tag","val":"at","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":92,"column":33},"end":{"line":92,"column":33}},"args":[]}]},{"id":"<value>","kind":"value","val":0,"loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":92,"column":35},"end":{"line":92,"column":37}},"args":[]}]},{"id":"<name>","kind":"tag","val":"at","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":92,"column":39},"end":{"line":92,"column":39}},"args":[]}]},{"id":"<value>","kind":"value","val":0,"loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":92,"column":41},"end":{"line":92,"column":43}},"args":[]}]},{"id":"<name>","kind":"tag","val":"copy","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":92,"column":45},"end":{"line":92,"column":45}},"args":[]}]},{"id":"<tuple>","kind":"builtin","val":null,"loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":92,"column":49},"end":{"line":92,"column":50}},"args":[]}]}');
                            innerDo = ast.newDo([
                                code.copy(),
                                tail
                            ]);
                            _$4 = ast.newMeta(innerDo);
                            break _$5;
                        }
                        return _$4;
                    }
                }));
                ast.defineSymbol(ast.createMacro('#macro', 'binaryKeyword', 'LOW', {
                    'expand': function (ast) {
                        var argsTuple, args, result, _$4, _$5, _$6, _$7, _$8;
                        _$5: {
                            if (!ast.count === 2) {
                                _$6: {
                                    ast.error('Expected arguments: name and properties');
                                    return null;
                                }
                            }
                            argsTuple = ast.at(1).asTuple();
                            args = composeMacroArguments(ast.at(0), argsTuple);
                            if (args !== null) {
                                _$8: {
                                    result = ast.fromJsonString('{"id":"<call>","kind":"builtin","val":null,"loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":110,"column":32},"end":{"line":110,"column":80}},"args":[{"id":".","kind":"builtin","val":".","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":110,"column":36},"end":{"line":110,"column":36}},"args":[{"id":"<tag>","kind":"tag","val":"ast","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":110,"column":33},"end":{"line":110,"column":33}},"args":[]},{"id":"<name>","kind":"tag","val":"createMacro","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":110,"column":37},"end":{"line":110,"column":37}},"args":[]}]},{"id":"<tuple>","kind":"builtin","val":null,"loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":110,"column":48},"end":{"line":110,"column":79}},"args":[{"id":"<tag>","kind":"tag","val":"__arg0","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":110,"column":48},"end":{"line":110,"column":55}},"args":[]},{"id":"<tag>","kind":"tag","val":"__arg1","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":110,"column":55},"end":{"line":110,"column":63}},"args":[]},{"id":"<tag>","kind":"tag","val":"__arg2","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":110,"column":63},"end":{"line":110,"column":71}},"args":[]},{"id":"<tag>","kind":"tag","val":"__arg3","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":110,"column":71},"end":{"line":110,"column":79}},"args":[]}]}]}');
                                    result.replaceTag('__arg0', args[0]);
                                    result.replaceTag('__arg1', args[1]);
                                    result.replaceTag('__arg2', args[2]);
                                    result.replaceTag('__arg3', args[3]);
                                    _$7 = result;
                                    break _$8;
                                }
                            } else {
                                _$7 = null;
                            }
                            _$4 = _$7;
                            break _$5;
                        }
                        return _$4;
                    }
                }));
                ast.defineSymbol(ast.createMacro('#defmacro', 'binaryKeyword', 'LOW', {
                    'postCombine': function (ast) {
                        var argsTuple, args, definition, _$4, _$5, _$6, _$7, _$8;
                        _$5: {
                            if (!ast.count === 2) {
                                _$6: {
                                    ast.error('Expected arguments: name and properties');
                                    return null;
                                }
                            }
                            argsTuple = ast.at(1).asTuple();
                            args = composeMacroArguments(ast.at(0), argsTuple);
                            if (args !== null) {
                                _$8: {
                                    definition = ast.fromJsonString('{"id":"<tuple>","kind":"builtin","val":null,"loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":132,"column":36},"end":{"line":132,"column":108}},"args":[{"id":"<call>","kind":"builtin","val":null,"loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":132,"column":53},"end":{"line":132,"column":101}},"args":[{"id":".","kind":"builtin","val":".","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":132,"column":40},"end":{"line":132,"column":40}},"args":[{"id":"<tag>","kind":"tag","val":"ast","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":132,"column":37},"end":{"line":132,"column":37}},"args":[]},{"id":"<name>","kind":"tag","val":"defineSymbol","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":132,"column":41},"end":{"line":132,"column":41}},"args":[]}]},{"id":"<call>","kind":"builtin","val":null,"loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":132,"column":53},"end":{"line":132,"column":101}},"args":[{"id":".","kind":"builtin","val":".","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":132,"column":57},"end":{"line":132,"column":57}},"args":[{"id":"<tag>","kind":"tag","val":"ast","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":132,"column":54},"end":{"line":132,"column":54}},"args":[]},{"id":"<name>","kind":"tag","val":"createMacro","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":132,"column":58},"end":{"line":132,"column":58}},"args":[]}]},{"id":"<tuple>","kind":"builtin","val":null,"loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":132,"column":69},"end":{"line":132,"column":100}},"args":[{"id":"<tag>","kind":"tag","val":"__arg0","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":132,"column":69},"end":{"line":132,"column":76}},"args":[]},{"id":"<tag>","kind":"tag","val":"__arg1","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":132,"column":76},"end":{"line":132,"column":84}},"args":[]},{"id":"<tag>","kind":"tag","val":"__arg2","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":132,"column":84},"end":{"line":132,"column":92}},"args":[]},{"id":"<tag>","kind":"tag","val":"__arg3","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":132,"column":92},"end":{"line":132,"column":100}},"args":[]}]}]}]},{"id":"<tag>","kind":"tag","val":"null","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":132,"column":102},"end":{"line":132,"column":108}},"args":[]}]}');
                                    definition.replaceTag('__arg0', args[0]);
                                    definition.replaceTag('__arg1', args[1]);
                                    definition.replaceTag('__arg2', args[2]);
                                    definition.replaceTag('__arg3', args[3]);
                                    _$7 = ast.newMeta(ast.newDo(definition));
                                    break _$8;
                                }
                            } else {
                                _$7 = null;
                            }
                            _$4 = _$7;
                            break _$5;
                        }
                        return _$4;
                    }
                }));
                ast.defineSymbol(ast.createMacro('#keepmacro', 'binaryKeyword', 'LOW', {
                    'postCombine': function (ast) {
                        var argsTuple, args, definition, result, _$4, _$5, _$6, _$7, _$8;
                        _$5: {
                            if (!ast.count === 2) {
                                _$6: {
                                    ast.error('Expected arguments: name and properties');
                                    return null;
                                }
                            }
                            argsTuple = ast.at(1).asTuple();
                            args = composeMacroArguments(ast.at(0), argsTuple);
                            if (args !== null) {
                                _$8: {
                                    definition = ast.fromJsonString('{"id":"<tuple>","kind":"builtin","val":null,"loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":154,"column":36},"end":{"line":154,"column":108}},"args":[{"id":"<call>","kind":"builtin","val":null,"loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":154,"column":53},"end":{"line":154,"column":101}},"args":[{"id":".","kind":"builtin","val":".","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":154,"column":40},"end":{"line":154,"column":40}},"args":[{"id":"<tag>","kind":"tag","val":"ast","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":154,"column":37},"end":{"line":154,"column":37}},"args":[]},{"id":"<name>","kind":"tag","val":"defineSymbol","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":154,"column":41},"end":{"line":154,"column":41}},"args":[]}]},{"id":"<call>","kind":"builtin","val":null,"loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":154,"column":53},"end":{"line":154,"column":101}},"args":[{"id":".","kind":"builtin","val":".","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":154,"column":57},"end":{"line":154,"column":57}},"args":[{"id":"<tag>","kind":"tag","val":"ast","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":154,"column":54},"end":{"line":154,"column":54}},"args":[]},{"id":"<name>","kind":"tag","val":"createMacro","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":154,"column":58},"end":{"line":154,"column":58}},"args":[]}]},{"id":"<tuple>","kind":"builtin","val":null,"loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":154,"column":69},"end":{"line":154,"column":100}},"args":[{"id":"<tag>","kind":"tag","val":"__arg0","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":154,"column":69},"end":{"line":154,"column":76}},"args":[]},{"id":"<tag>","kind":"tag","val":"__arg1","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":154,"column":76},"end":{"line":154,"column":84}},"args":[]},{"id":"<tag>","kind":"tag","val":"__arg2","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":154,"column":84},"end":{"line":154,"column":92}},"args":[]},{"id":"<tag>","kind":"tag","val":"__arg3","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":154,"column":92},"end":{"line":154,"column":100}},"args":[]}]}]}]},{"id":"<tag>","kind":"tag","val":"null","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":154,"column":102},"end":{"line":154,"column":108}},"args":[]}]}');
                                    definition.replaceTag('__arg0', args[0]);
                                    definition.replaceTag('__arg1', args[1]);
                                    definition.replaceTag('__arg2', args[2]);
                                    definition.replaceTag('__arg3', args[3]);
                                    result = ast.newMeta(ast.newDo(definition));
                                    result.sym = ast.keyScope.get('#keep-meta');
                                    _$7 = result;
                                    break _$8;
                                }
                            } else {
                                _$7 = null;
                            }
                            _$4 = _$7;
                            break _$5;
                        }
                        return _$4;
                    }
                }));
            }
            _$4: {
                ast.defineSymbol(ast.createMacro('~`', 'unary', 'LOW', {
                    'expand': function (ast) {
                        return undefined;
                    }
                }));
            }
            _$5: {
                ast.defineSymbol(ast.createMacro('`', 'unary', 'LOW', {
                    'doNotExpandChildren': true,
                    'expand': function (ast) {
                        var code, result, tagReplacements, unquoteIndex, _$6, _$7;
                        _$7: {
                            code = ast.at(0);
                            result = ast.fromJsonString('{"id":"<do>","kind":"builtin","val":null,"loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":180,"column":24},"end":{"line":184,"column":4}},"args":[{"id":"=","kind":"builtin","val":"=","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":181,"column":19},"end":{"line":181,"column":19}},"args":[{"id":"<vTagDeclaration>","kind":"tag","val":"codeTag","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":181,"column":6},"end":{"line":181,"column":11}},"args":[]},{"id":"#quote","kind":"builtin","val":"#quote","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":181,"column":21},"end":{"line":181,"column":21}},"args":[{"id":"<tag>","kind":"tag","val":"code","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":181,"column":28},"end":{"line":181,"column":28}},"args":[]}]}]},{"id":"<tag>","kind":"tag","val":"tagReplacements","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":182,"column":6},"end":{"line":182,"column":21}},"args":[]},{"id":"<vTag>","kind":"tag","val":"codeTag","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":183,"column":6},"end":{"line":183,"column":7}},"args":[]}]}');
                            tagReplacements = [];
                            unquoteIndex = 1;
                            code.forEachRecursive(function (child) {
                                var replacement, replacementName, replacementNameVal, replacementNameTag, tagReplacement, _$8, _$9, _$10, _$11;
                                _$9: {
                                    if (child.id === '~`') {
                                        _$10: {
                                            _$11: {
                                                replacement = child.at(0);
                                                replacementName = 'unquote' + unquoteIndex;
                                                replacementNameVal = child.newValue(replacementName);
                                                replacementNameTag = child.newTag(replacementName);
                                                tagReplacement = ast.fromJsonString('{"id":"<call>","kind":"builtin","val":null,"loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":194,"column":36},"end":{"line":194,"column":86}},"args":[{"id":".","kind":"builtin","val":".","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":194,"column":47},"end":{"line":194,"column":47}},"args":[{"id":"<vTag>","kind":"tag","val":"codeTag","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":194,"column":37},"end":{"line":194,"column":46}},"args":[]},{"id":"<name>","kind":"tag","val":"replaceTag","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":194,"column":48},"end":{"line":194,"column":48}},"args":[]}]},{"id":"<tuple>","kind":"builtin","val":null,"loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":194,"column":58},"end":{"line":194,"column":85}},"args":[{"id":"<tag>","kind":"tag","val":"quotedTagName","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":194,"column":58},"end":{"line":194,"column":72}},"args":[]},{"id":"<tag>","kind":"tag","val":"replacement","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":194,"column":72},"end":{"line":194,"column":85}},"args":[]}]}]}');
                                            }
                                            child.replaceWith(replacementNameTag);
                                            tagReplacement.replaceTag('quotedTagName', replacementNameVal);
                                            tagReplacement.replaceTag('replacement', replacement);
                                            tagReplacements.push(tagReplacement);
                                            unquoteIndex += 1;
                                        }
                                    }
                                    _$8 = undefined;
                                    break _$9;
                                }
                                return _$8;
                            });
                            result.replaceTag('code', code);
                            result.replaceTag('tagReplacements', tagReplacements);
                            result.resolveVirtual();
                            _$6 = result;
                            break _$7;
                        }
                        return _$6;
                    }
                }));
            }
            _$6: {
                ast.defineSymbol(ast.createMacro('do!', 'unary', 'LOW', {
                    'expand': function (ast) {
                        var body, statements, result, _$7, _$8, _$9, _$10, codeTag0;
                        _$8: {
                            body = ast.at(0);
                            statements = body.copy().asTuple();
                            _$10: {
                                codeTag0 = ast.fromJsonString('{"id":"<do>","kind":"builtin","val":null,"loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":212,"column":6},"end":{"line":215,"column":17}},"args":[{"id":"<tag>","kind":"tag","val":"unquote1","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":213,"column":8},"end":{"line":213,"column":8}},"args":[]},{"id":"<tag>","kind":"tag","val":"undefined","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":214,"column":8},"end":{"line":214,"column":17}},"args":[]}]}');
                                codeTag0.replaceTag('unquote1', statements.map(function (arg) {
                                    return arg;
                                }));
                                _$9 = codeTag0;
                                break _$10;
                            }
                            result = _$9;
                            _$7 = result;
                            break _$8;
                        }
                        return _$7;
                    }
                }));
            }
            _$7: {
                ast.defineSymbol(ast.createMacro('#metamodule', 'unary', 'LOW', {
                    'expand': function (ast) {
                        var body, _$8, _$9, _$10, _$11, codeTag0;
                        _$9: {
                            body = ast.at(0);
                            _$11: {
                                codeTag0 = ast.fromJsonString('{"id":"<tuple>","kind":"builtin","val":null,"loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":222,"column":6},"end":{"line":229,"column":0}},"args":[{"id":"<xTag>","kind":"tag","val":"module","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":222,"column":6},"end":{"line":222,"column":16}},"args":[]},{"id":"=","kind":"builtin","val":"=","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":223,"column":21},"end":{"line":223,"column":21}},"args":[{"id":".","kind":"builtin","val":".","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":223,"column":12},"end":{"line":223,"column":12}},"args":[{"id":"<tag>","kind":"tag","val":"module","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":223,"column":6},"end":{"line":223,"column":6}},"args":[]},{"id":"<name>","kind":"tag","val":"exports","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":223,"column":13},"end":{"line":223,"column":13}},"args":[]}]},{"id":"->","kind":"builtin","val":"->","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":223,"column":29},"end":{"line":223,"column":29}},"args":[{"id":"<argument>","kind":"tag","val":"ast","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":223,"column":23},"end":{"line":223,"column":27}},"args":[]},{"id":"<do>","kind":"builtin","val":null,"loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":224,"column":8},"end":{"line":229,"column":14}},"args":[{"id":"<do>","kind":"builtin","val":null,"loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":225,"column":10},"end":{"line":227,"column":19}},"args":[{"id":"<tag>","kind":"tag","val":"unquote1","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":226,"column":12},"end":{"line":227,"column":10}},"args":[]}]},{"id":"<tag>","kind":"tag","val":"null","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":227,"column":10},"end":{"line":227,"column":14}},"args":[]}]}]}]}]}');
                                codeTag0.replaceTag('unquote1', body);
                                _$10 = codeTag0;
                                break _$11;
                            }
                            _$8 = _$10;
                            break _$9;
                        }
                        return _$8;
                    }
                }));
            }
            _$8: {
                ast.defineSymbol(ast.createMacro('#metaimport', 'unary', 'LOW', {
                    'postCombine': function (ast) {
                        var moduleName, moduleString, _$9, _$10, _$11, _$12, _$13, _$14, codeTag0;
                        _$10: {
                            moduleName = ast.at(0);
                            moduleString = moduleName.getSimpleValue();
                            if (typeof moduleString !== 'string') {
                                _$12: {
                                    moduleName.error('Invalid module name');
                                    _$11 = null;
                                    break _$12;
                                }
                            } else {
                                _$14: {
                                    codeTag0 = ast.fromJsonString('{"id":"<tuple>","kind":"builtin","val":null,"loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":240,"column":10},"end":{"line":247,"column":0}},"args":[{"id":"try","kind":"builtin","val":"try","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":240,"column":10},"end":{"line":240,"column":10}},"args":[{"id":"<tuple>","kind":"builtin","val":null,"loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":241,"column":12},"end":{"line":243,"column":10}},"args":[{"id":"=","kind":"builtin","val":"=","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":241,"column":28},"end":{"line":241,"column":28}},"args":[{"id":"<tagDeclaration>","kind":"tag","val":"metaRequire","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":241,"column":12},"end":{"line":241,"column":16}},"args":[]},{"id":"<call>","kind":"builtin","val":null,"loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":241,"column":54},"end":{"line":241,"column":81}},"args":[{"id":"<call>","kind":"builtin","val":null,"loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":241,"column":30},"end":{"line":241,"column":53}},"args":[{"id":"<tag>","kind":"tag","val":"require","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":241,"column":31},"end":{"line":241,"column":31}},"args":[]},{"id":"<value>","kind":"value","val":"require-like","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":241,"column":39},"end":{"line":241,"column":52}},"args":[]}]},{"id":".","kind":"builtin","val":".","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":241,"column":54},"end":{"line":241,"column":81}},"args":[{"id":".","kind":"builtin","val":".","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":241,"column":67},"end":{"line":241,"column":67}},"args":[{"id":".","kind":"builtin","val":".","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":241,"column":58},"end":{"line":241,"column":58}},"args":[{"id":"<tag>","kind":"tag","val":"ast","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":241,"column":55},"end":{"line":241,"column":55}},"args":[]},{"id":"<name>","kind":"tag","val":"compiler","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":241,"column":59},"end":{"line":241,"column":59}},"args":[]}]},{"id":"<name>","kind":"tag","val":"parser","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":241,"column":68},"end":{"line":241,"column":68}},"args":[]}]},{"id":"<name>","kind":"tag","val":"source","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":241,"column":75},"end":{"line":241,"column":75}},"args":[]}]}]}]},{"id":"<call>","kind":"builtin","val":null,"loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":242,"column":63},"end":{"line":242,"column":67}},"args":[{"id":"<call>","kind":"builtin","val":null,"loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":242,"column":12},"end":{"line":242,"column":61}},"args":[{"id":"<tag>","kind":"tag","val":"metaRequire","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":242,"column":13},"end":{"line":242,"column":13}},"args":[]},{"id":"<tag>","kind":"tag","val":"unquote1","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":242,"column":25},"end":{"line":242,"column":25}},"args":[]}]},{"id":"<tag>","kind":"tag","val":"ast","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":242,"column":63},"end":{"line":242,"column":67}},"args":[]}]}]},{"id":"catch","kind":"builtin","val":"catch","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":243,"column":10},"end":{"line":243,"column":10}},"args":[{"id":"<tagDeclaration>","kind":"tag","val":"e","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":243,"column":16},"end":{"line":243,"column":22}},"args":[]},{"id":"<call>","kind":"builtin","val":null,"loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":244,"column":12},"end":{"line":245,"column":10}},"args":[{"id":".","kind":"builtin","val":".","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":244,"column":15},"end":{"line":244,"column":15}},"args":[{"id":"<tag>","kind":"tag","val":"ast","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":244,"column":12},"end":{"line":244,"column":12}},"args":[]},{"id":"<name>","kind":"tag","val":"error","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":244,"column":16},"end":{"line":244,"column":16}},"args":[]}]},{"id":"+","kind":"builtin","val":"+","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":244,"column":21},"end":{"line":244,"column":63}},"args":[{"id":"<value>","kind":"value","val":"Error importing module: ","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":244,"column":22},"end":{"line":244,"column":47}},"args":[]},{"id":"<call>","kind":"builtin","val":null,"loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":244,"column":61},"end":{"line":244,"column":62}},"args":[{"id":".","kind":"builtin","val":".","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":244,"column":52},"end":{"line":244,"column":52}},"args":[{"id":"<tag>","kind":"tag","val":"e","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":244,"column":51},"end":{"line":244,"column":51}},"args":[]},{"id":"<name>","kind":"tag","val":"toString","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":244,"column":53},"end":{"line":244,"column":53}},"args":[]}]},{"id":"<tuple>","kind":"builtin","val":null,"loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":244,"column":61},"end":{"line":244,"column":62}},"args":[]}]}]}]}]}]},{"id":"<tag>","kind":"tag","val":"null","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":245,"column":10},"end":{"line":245,"column":14}},"args":[]}]}');
                                    codeTag0.replaceTag('unquote1', moduleName.newValue(moduleString));
                                    _$13 = codeTag0;
                                    break _$14;
                                }
                                _$11 = moduleName.newMeta(_$13);
                            }
                            _$9 = _$11;
                            break _$10;
                        }
                        return _$9;
                    }
                }));
            }
            _$9: {
                ast.defineSymbol(ast.createMacro('while', 'binaryKeyword', 'LOW', {
                    'expand': function (ast) {
                        var body, condition, _$10, _$11, _$12, _$13, codeTag0;
                        _$11: {
                            body = ast.at(1);
                            condition = ast.at(0);
                            _$13: {
                                codeTag0 = ast.fromJsonString('{"id":"loop","kind":"builtin","val":"loop","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":251,"column":6},"end":{"line":251,"column":6}},"args":[{"id":"<tuple>","kind":"builtin","val":null,"loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":251,"column":11},"end":{"line":251,"column":12}},"args":[]},{"id":"if","kind":"builtin","val":"if","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":252,"column":6},"end":{"line":257,"column":0}},"args":[{"id":"<tag>","kind":"tag","val":"unquote1","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":252,"column":9},"end":{"line":252,"column":22}},"args":[]},{"id":"<do>","kind":"builtin","val":null,"loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":252,"column":24},"end":{"line":257,"column":0}},"args":[{"id":"<do>","kind":"builtin","val":null,"loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":253,"column":8},"end":{"line":255,"column":17}},"args":[{"id":"<tag>","kind":"tag","val":"unquote2","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":254,"column":10},"end":{"line":255,"column":8}},"args":[]}]},{"id":"next!","kind":"builtin","val":"next!","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":255,"column":8},"end":{"line":255,"column":8}},"args":[{"id":"<tuple>","kind":"builtin","val":null,"loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":255,"column":14},"end":{"line":255,"column":15}},"args":[]}]}]}]}]}');
                                codeTag0.replaceTag('unquote1', condition);
                                codeTag0.replaceTag('unquote2', body);
                                _$12 = codeTag0;
                                break _$13;
                            }
                            _$10 = _$12;
                            break _$11;
                        }
                        return _$10;
                    }
                }));
            }
            _$10: {
                ast.defineSymbol(ast.createMacro('.->', 'binary', 'MEMBER', {
                    'expand': function (ast) {
                        var following, start, current, others, getLeftmost, other, otherLeftmost, otherParent, _$11, _$12, _$13, _$14, _$15, _$16, _$17, _$18, _$19, codeTag0, _$20, _$21, _$22, codeTag1;
                        _$12: {
                            following = ast.at(1);
                            start = ast.at(0);
                            _$13: {
                                current = start;
                                others = following.asTuple();
                                getLeftmost = function (root) {
                                    var _$14, _$15, _$16, _$17, _$18;
                                    _$15: {
                                        _$16:
                                            while (true) {
                                                if (root.isCall() || root.isMember()) {
                                                    _$17: {
                                                        _$18: {
                                                            root = root.at(0);
                                                        }
                                                        continue;
                                                    }
                                                }
                                                break _$16;
                                            }
                                        _$14 = root;
                                        break _$15;
                                    }
                                    return _$14;
                                };
                            }
                            _$14:
                                while (true) {
                                    if (others.count > 0) {
                                        _$15: {
                                            _$16: {
                                                _$17: {
                                                    other = others.shift();
                                                    otherLeftmost = getLeftmost(other);
                                                }
                                                if (otherLeftmost.parent === null) {
                                                    _$19: {
                                                        codeTag0 = ast.fromJsonString('{"id":".","kind":"builtin","val":".","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":274,"column":23},"end":{"line":274,"column":23}},"args":[{"id":"<tag>","kind":"tag","val":"unquote1","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":274,"column":12},"end":{"line":274,"column":22}},"args":[]},{"id":"<tag>","kind":"tag","val":"unquote2","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":274,"column":24},"end":{"line":274,"column":41}},"args":[]}]}');
                                                        codeTag0.replaceTag('unquote1', current);
                                                        codeTag0.replaceTag('unquote2', otherLeftmost);
                                                        _$18 = codeTag0;
                                                        break _$19;
                                                    }
                                                } else {
                                                    _$20: {
                                                        otherParent = otherLeftmost.parent;
                                                        otherParent.shift();
                                                        _$22: {
                                                            codeTag1 = ast.fromJsonString('{"id":".","kind":"builtin","val":".","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":278,"column":44},"end":{"line":278,"column":44}},"args":[{"id":"<tag>","kind":"tag","val":"unquote1","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":278,"column":33},"end":{"line":278,"column":43}},"args":[]},{"id":"<tag>","kind":"tag","val":"unquote2","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":278,"column":45},"end":{"line":278,"column":62}},"args":[]}]}');
                                                            codeTag1.replaceTag('unquote1', current);
                                                            codeTag1.replaceTag('unquote2', otherLeftmost);
                                                            _$21 = codeTag1;
                                                            break _$22;
                                                        }
                                                        otherParent.unshift(_$21);
                                                        _$18 = other;
                                                        break _$20;
                                                    }
                                                }
                                                current = _$18;
                                            }
                                            continue;
                                        }
                                    }
                                    break _$14;
                                }
                            _$11 = current;
                            break _$12;
                        }
                        return _$11;
                    }
                }));
            }
            _$11: {
                ast.defineSymbol(ast.createMacro('<-', 'binary', 'MEDIUM', {
                    'expand': function (ast) {
                        var args, callee, _$12, _$13, _$14, _$15, codeTag0;
                        _$13: {
                            args = ast.at(1);
                            callee = ast.at(0);
                            _$15: {
                                codeTag0 = ast.fromJsonString('{"id":"<call>","kind":"builtin","val":null,"loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":286,"column":16},"end":{"line":286,"column":23}},"args":[{"id":"<tag>","kind":"tag","val":"unquote1","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":286,"column":6},"end":{"line":286,"column":15}},"args":[]},{"id":"<tag>","kind":"tag","val":"unquote2","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":286,"column":16},"end":{"line":286,"column":23}},"args":[]}]}');
                                codeTag0.replaceTag('unquote1', callee);
                                codeTag0.replaceTag('unquote2', args);
                                _$14 = codeTag0;
                                break _$15;
                            }
                            _$12 = _$14;
                            break _$13;
                        }
                        return _$12;
                    }
                }));
            }
            _$12: {
                ast.defineSymbol(ast.createMacro('#->', 'unary', 'LOW', {
                    'expand': function (ast) {
                        var body, args, processNext, n, currentId, currentArgName, _$13, _$14, _$15, _$16, _$17, _$18, _$19, codeTag0;
                        _$14: {
                            body = ast.at(0);
                            if (typeof body === 'undefined' || body.isPlaceholder() && body.getSimpleValue() === null) {
                                body = ast.newTag('undefined');
                            }
                            args = ast.newTuple();
                            processNext = true;
                            n = 1;
                            _$15:
                                while (true) {
                                    if (processNext) {
                                        _$16: {
                                            processNext = false;
                                            _$17: {
                                                currentId = '#' + n;
                                                currentArgName = '__$arg$' + n;
                                            }
                                            body.forEachRecursive(function (node) {
                                                var _$18, _$19, _$20, _$21;
                                                _$19: {
                                                    if (node.isPlaceholder() && (node.getSimpleValue() === currentId || n === 1 && node.getSimpleValue() === '#it')) {
                                                        _$20: {
                                                            if (!processNext) {
                                                                _$21: {
                                                                    processNext = true;
                                                                    args.push(ast.newTag(currentArgName).handleAsFunctionArgument());
                                                                }
                                                            }
                                                            node.replaceWith(node.newTag(currentArgName));
                                                        }
                                                    }
                                                    _$18 = undefined;
                                                    break _$19;
                                                }
                                                return _$18;
                                            });
                                            n = n + 1;
                                            continue;
                                        }
                                    }
                                    break _$15;
                                }
                            _$19: {
                                codeTag0 = ast.fromJsonString('{"id":"->","kind":"builtin","val":"->","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":329,"column":15},"end":{"line":329,"column":15}},"args":[{"id":"<argument>","kind":"tag","val":"unquote1","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":329,"column":5},"end":{"line":329,"column":13}},"args":[]},{"id":"<tag>","kind":"tag","val":"unquote2","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":329,"column":18},"end":{"line":329,"column":26}},"args":[]}]}');
                                codeTag0.replaceTag('unquote1', args);
                                codeTag0.replaceTag('unquote2', body);
                                _$18 = codeTag0;
                                break _$19;
                            }
                            _$13 = _$18;
                            break _$14;
                        }
                        return _$13;
                    }
                }));
            }
            _$13: {
                ast.defineSymbol(ast.createMacro('=>', 'binary', 'FUNCTION', {
                    'leftPrecedence': 'FUNCTION-LEFT',
                    'expand': function (ast) {
                        var rhs, lhs, traverser, result, _$14, _$15, _$16, _$17, codeTag0;
                        _$15: {
                            rhs = ast.at(1);
                            lhs = ast.at(0);
                            traverser = function (__$arg$1) {
                                var _$16, _$17, _$18, _$19, codeTag0;
                                _$17: {
                                    if (__$arg$1.isTag() && __$arg$1.getTag() === 'this') {
                                        _$19: {
                                            codeTag0 = ast.fromJsonString('{"id":"<vTag>","kind":"tag","val":"captured-this","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":340,"column":26},"end":{"line":340,"column":27}},"args":[]}');
                                            _$18 = codeTag0;
                                            break _$19;
                                        }
                                        __$arg$1.replaceWith(_$18);
                                    }
                                    if (!__$arg$1.isFunctionDefinition()) {
                                        __$arg$1.forEach(function (__$arg$1) {
                                            return traverser(__$arg$1);
                                        });
                                    }
                                    _$16 = undefined;
                                    break _$17;
                                }
                                return _$16;
                            };
                            traverser(rhs);
                            _$17: {
                                codeTag0 = ast.fromJsonString('{"id":"<do>","kind":"builtin","val":null,"loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":344,"column":19},"end":{"line":347,"column":4}},"args":[{"id":"=","kind":"builtin","val":"=","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":345,"column":25},"end":{"line":345,"column":25}},"args":[{"id":"<vTagDeclaration>","kind":"tag","val":"captured-this","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":345,"column":6},"end":{"line":345,"column":11}},"args":[]},{"id":"<tag>","kind":"tag","val":"this","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":345,"column":27},"end":{"line":345,"column":27}},"args":[]}]},{"id":"->","kind":"builtin","val":"->","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":346,"column":15},"end":{"line":346,"column":15}},"args":[{"id":"<argument>","kind":"tag","val":"unquote1","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":346,"column":6},"end":{"line":346,"column":13}},"args":[]},{"id":"<tag>","kind":"tag","val":"unquote2","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":346,"column":18},"end":{"line":346,"column":25}},"args":[]}]}]}');
                                codeTag0.replaceTag('unquote1', lhs);
                                codeTag0.replaceTag('unquote2', rhs);
                                _$16 = codeTag0;
                                break _$17;
                            }
                            result = _$16;
                            result.resolveVirtual();
                            _$14 = result;
                            break _$15;
                        }
                        return _$14;
                    }
                }));
            }
            _$14: {
                ast.defineSymbol(ast.createMacro('#js', 'unary', 'HIGH', {
                    'expand': function (ast) {
                        var expr, code, _$15, _$16, _$17, _$18, codeTag0;
                        _$16: {
                            expr = ast.at(0);
                            _$18: {
                                codeTag0 = ast.fromJsonString('{"id":"<call>","kind":"builtin","val":null,"loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":360,"column":33},"end":{"line":360,"column":44}},"args":[{"id":"<xTag>","kind":"tag","val":"eval","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":360,"column":17},"end":{"line":360,"column":32}},"args":[]},{"id":"<tag>","kind":"tag","val":"unquote1","loc":{"source":"/data/massi/metascript/lib/core-macros.mjs","start":{"line":360,"column":33},"end":{"line":360,"column":44}},"args":[]}]}');
                                codeTag0.replaceTag('unquote1', expr);
                                _$17 = codeTag0;
                                break _$18;
                            }
                            code = _$17;
                            if (expr.isValue()) {
                                code.set('js', expr.getValue());
                            }
                            _$15 = code;
                            break _$16;
                        }
                        return _$15;
                    }
                }));
            }
            _$15: {
                ast.defineSymbol(ast.createMacro('#no-new-scope', 'unary', 'LOW', {
                    'expand': function (ast) {
                        var expr, _$16, _$17;
                        _$17: {
                            expr = ast.at(0);
                            expr.set('no-new-scope', true);
                            _$16 = expr;
                            break _$17;
                        }
                        return _$16;
                    }
                }));
            }
            _$1 = null;
            break _$2;
        }
        return _$1;
    };
}
//# sourceMappingURL=data:application/json;base64,