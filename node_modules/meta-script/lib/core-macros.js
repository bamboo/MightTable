var _$0;
_$0: {
    module.exports = function (ast) {
        var composeMacroArguments, _$1, _$2, _$3, _$4, _$5, _$6, _$7, _$8, _$9, _$10, _$11, _$12, _$13, _$14, _$15;
        _$2: {
            _$3: {
                composeMacroArguments = function (nameArg, argsTuple) {
                    var nameValue, ok, name, arity, precedence, options, index, arg, simpleValue, skip, property, value, propertyName, simplePropertyValue, func, macroBody, macroArgs, argIndex, macroArg, argDeclaration, _$4, _$5, _$6, _$7, _$8, _$9, _$10, _$11, _$12, _$13, _$14, _$15, _$16, _$17, _$18, _$19, _$20, _$21, _$22;
                    _$5: {
                        nameValue = nameArg.getSimpleValue();
                        if (nameValue === null) {
                            _$6: {
                                argsTuple.error('Invalid name argument');
                                return null;
                            }
                        }
                        if (!argsTuple.isTuple()) {
                            _$7: {
                                argsTuple.error('Expected tuple argument');
                                return null;
                            }
                        }
                        _$8: {
                            ok = true;
                            name = nameArg.newValue(nameValue);
                            arity = ast.newValue('unary');
                            precedence = ast.newValue('LOW');
                            options = ast.newObjectLiteral();
                        }
                        index = 0;
                        _$9:
                            while (true) {
                                if (index < argsTuple.count) {
                                    _$10: {
                                        arg = argsTuple.at(index);
                                        simpleValue = arg.getSimpleValue();
                                        if (simpleValue !== null) {
                                            if (index === 0) {
                                                arity = arg.newValue(simpleValue);
                                            } else {
                                                if (index === 1) {
                                                    precedence = arg.newValue(simpleValue);
                                                } else {
                                                    _$11: {
                                                        arg.error('Invalid simple property');
                                                        ok = false;
                                                    }
                                                }
                                            }
                                        } else {
                                            if (arg.isProperty()) {
                                                _$12: {
                                                    skip = false;
                                                    property = arg.copy();
                                                    value = property.at(1);
                                                    propertyName = property.at(0).getSimpleValue();
                                                    simplePropertyValue = value.getSimpleValue();
                                                    if (propertyName === 'arity' && simplePropertyValue !== null) {
                                                        _$13: {
                                                            arity = arg.newValue(simplePropertyValue);
                                                            skip = true;
                                                        }
                                                    } else {
                                                        if (propertyName === 'precedence' && simplePropertyValue !== null) {
                                                            _$14: {
                                                                precedence = arg.newValue(simplePropertyValue);
                                                                skip = true;
                                                            }
                                                        } else {
                                                            if (value.isFunctionDefinition()) {
                                                                _$15: {
                                                                    func = value.copy();
                                                                    macroBody = func.pop().asTuple();
                                                                    macroArgs = func.pop().asTuple();
                                                                    func.push(arg.newTag('ast'));
                                                                    func.push(macroBody);
                                                                    argIndex = 0;
                                                                    _$16:
                                                                        while (true) {
                                                                            if (argIndex < macroArgs.count) {
                                                                                _$17: {
                                                                                    macroArg = macroArgs.at(argIndex);
                                                                                    if (macroArg.isTag()) {
                                                                                        _$18: {
                                                                                            argDeclaration = ast.fromJsonString('{"id":"=","kind":"builtin","val":"=","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":54,"column":60},"end":{"line":54,"column":60}},"args":[{"id":"<tagDeclaration>","kind":"tag","val":"__argName","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":54,"column":46},"end":{"line":54,"column":50}},"args":[]},{"id":"<call>","kind":"builtin","val":null,"loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":54,"column":69},"end":{"line":54,"column":69}},"args":[{"id":".","kind":"builtin","val":".","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":54,"column":65},"end":{"line":54,"column":65}},"args":[{"id":"<tag>","kind":"tag","val":"ast","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":54,"column":62},"end":{"line":54,"column":62}},"args":[]},{"id":"<name>","kind":"tag","val":"at","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":54,"column":66},"end":{"line":54,"column":66}},"args":[]}]},{"id":"<tag>","kind":"tag","val":"__argIndex","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":54,"column":69},"end":{"line":54,"column":69}},"args":[]}]}]}');
                                                                                            argDeclaration.replaceTag('__argName', macroArg.newTag(macroArg.getTag()).handleAsTagDeclaration());
                                                                                            argDeclaration.replaceTag('__argIndex', macroArg.newValue(argIndex));
                                                                                            macroBody.unshift(argDeclaration);
                                                                                        }
                                                                                    } else {
                                                                                        _$19: {
                                                                                            macroArg.error('Argument name expected');
                                                                                            ok = false;
                                                                                        }
                                                                                    }
                                                                                    argIndex = argIndex + 1;
                                                                                    continue;
                                                                                }
                                                                            }
                                                                            break _$16;
                                                                        }
                                                                    if (ok) {
                                                                        _$20: {
                                                                            property.pop();
                                                                            property.push(func);
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                    if (!skip) {
                                                        options.push(property);
                                                    }
                                                }
                                            } else {
                                                _$21: {
                                                    arg.error('Invalid property');
                                                    ok = false;
                                                }
                                            }
                                        }
                                        index = index + 1;
                                        continue;
                                    }
                                }
                                break _$9;
                            }
                        if (ok) {
                            _$22 = [
                                name,
                                arity,
                                precedence,
                                options
                            ];
                        } else {
                            _$22 = null;
                        }
                        _$4 = _$22;
                        break _$5;
                    }
                    return _$4;
                };
                ast.defineSymbol(ast.createMacro('#exec-meta', 'unary', 'LOW', {
                    'postCombine': function (ast) {
                        var code, innerDo, _$4, _$5;
                        _$5: {
                            code = ast.at(0).copy();
                            innerDo = ast.newDo([
                                code.copy(),
                                ast.newTag('null')
                            ]);
                            _$4 = ast.newMeta(innerDo);
                            break _$5;
                        }
                        return _$4;
                    }
                }));
                ast.defineSymbol(ast.createMacro('#keep-meta', 'unary', 'LOW', {
                    'postCombine': function (ast) {
                        var code, tail, innerDo, _$4, _$5;
                        _$5: {
                            code = ast.at(0).copy();
                            tail = ast.fromJsonString('{"id":"<call>","kind":"builtin","val":null,"loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":92,"column":28},"end":{"line":92,"column":51}},"args":[{"id":".","kind":"builtin","val":".","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":92,"column":44},"end":{"line":92,"column":44}},"args":[{"id":"<call>","kind":"builtin","val":null,"loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":92,"column":41},"end":{"line":92,"column":43}},"args":[{"id":".","kind":"builtin","val":".","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":92,"column":38},"end":{"line":92,"column":38}},"args":[{"id":"<call>","kind":"builtin","val":null,"loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":92,"column":35},"end":{"line":92,"column":37}},"args":[{"id":".","kind":"builtin","val":".","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":92,"column":32},"end":{"line":92,"column":32}},"args":[{"id":"<tag>","kind":"tag","val":"ast","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":92,"column":29},"end":{"line":92,"column":29}},"args":[]},{"id":"<name>","kind":"tag","val":"at","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":92,"column":33},"end":{"line":92,"column":33}},"args":[]}]},{"id":"<value>","kind":"value","val":0,"loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":92,"column":35},"end":{"line":92,"column":37}},"args":[]}]},{"id":"<name>","kind":"tag","val":"at","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":92,"column":39},"end":{"line":92,"column":39}},"args":[]}]},{"id":"<value>","kind":"value","val":0,"loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":92,"column":41},"end":{"line":92,"column":43}},"args":[]}]},{"id":"<name>","kind":"tag","val":"copy","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":92,"column":45},"end":{"line":92,"column":45}},"args":[]}]},{"id":"<tuple>","kind":"builtin","val":null,"loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":92,"column":49},"end":{"line":92,"column":50}},"args":[]}]}');
                            innerDo = ast.newDo([
                                code.copy(),
                                tail
                            ]);
                            _$4 = ast.newMeta(innerDo);
                            break _$5;
                        }
                        return _$4;
                    }
                }));
                ast.defineSymbol(ast.createMacro('#macro', 'binaryKeyword', 'LOW', {
                    'expand': function (ast) {
                        var argsTuple, args, result, _$4, _$5, _$6, _$7, _$8;
                        _$5: {
                            if (!ast.count === 2) {
                                _$6: {
                                    ast.error('Expected arguments: name and properties');
                                    return null;
                                }
                            }
                            argsTuple = ast.at(1).asTuple();
                            args = composeMacroArguments(ast.at(0), argsTuple);
                            if (args !== null) {
                                _$8: {
                                    result = ast.fromJsonString('{"id":"<call>","kind":"builtin","val":null,"loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":110,"column":32},"end":{"line":110,"column":80}},"args":[{"id":".","kind":"builtin","val":".","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":110,"column":36},"end":{"line":110,"column":36}},"args":[{"id":"<tag>","kind":"tag","val":"ast","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":110,"column":33},"end":{"line":110,"column":33}},"args":[]},{"id":"<name>","kind":"tag","val":"createMacro","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":110,"column":37},"end":{"line":110,"column":37}},"args":[]}]},{"id":"<tuple>","kind":"builtin","val":null,"loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":110,"column":48},"end":{"line":110,"column":79}},"args":[{"id":"<tag>","kind":"tag","val":"__arg0","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":110,"column":48},"end":{"line":110,"column":55}},"args":[]},{"id":"<tag>","kind":"tag","val":"__arg1","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":110,"column":55},"end":{"line":110,"column":63}},"args":[]},{"id":"<tag>","kind":"tag","val":"__arg2","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":110,"column":63},"end":{"line":110,"column":71}},"args":[]},{"id":"<tag>","kind":"tag","val":"__arg3","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":110,"column":71},"end":{"line":110,"column":79}},"args":[]}]}]}');
                                    result.replaceTag('__arg0', args[0]);
                                    result.replaceTag('__arg1', args[1]);
                                    result.replaceTag('__arg2', args[2]);
                                    result.replaceTag('__arg3', args[3]);
                                    _$7 = result;
                                    break _$8;
                                }
                            } else {
                                _$7 = null;
                            }
                            _$4 = _$7;
                            break _$5;
                        }
                        return _$4;
                    }
                }));
                ast.defineSymbol(ast.createMacro('#defmacro', 'binaryKeyword', 'LOW', {
                    'postCombine': function (ast) {
                        var argsTuple, args, definition, _$4, _$5, _$6, _$7, _$8;
                        _$5: {
                            if (!ast.count === 2) {
                                _$6: {
                                    ast.error('Expected arguments: name and properties');
                                    return null;
                                }
                            }
                            argsTuple = ast.at(1).asTuple();
                            args = composeMacroArguments(ast.at(0), argsTuple);
                            if (args !== null) {
                                _$8: {
                                    definition = ast.fromJsonString('{"id":"<tuple>","kind":"builtin","val":null,"loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":132,"column":36},"end":{"line":132,"column":108}},"args":[{"id":"<call>","kind":"builtin","val":null,"loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":132,"column":53},"end":{"line":132,"column":101}},"args":[{"id":".","kind":"builtin","val":".","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":132,"column":40},"end":{"line":132,"column":40}},"args":[{"id":"<tag>","kind":"tag","val":"ast","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":132,"column":37},"end":{"line":132,"column":37}},"args":[]},{"id":"<name>","kind":"tag","val":"defineSymbol","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":132,"column":41},"end":{"line":132,"column":41}},"args":[]}]},{"id":"<call>","kind":"builtin","val":null,"loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":132,"column":53},"end":{"line":132,"column":101}},"args":[{"id":".","kind":"builtin","val":".","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":132,"column":57},"end":{"line":132,"column":57}},"args":[{"id":"<tag>","kind":"tag","val":"ast","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":132,"column":54},"end":{"line":132,"column":54}},"args":[]},{"id":"<name>","kind":"tag","val":"createMacro","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":132,"column":58},"end":{"line":132,"column":58}},"args":[]}]},{"id":"<tuple>","kind":"builtin","val":null,"loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":132,"column":69},"end":{"line":132,"column":100}},"args":[{"id":"<tag>","kind":"tag","val":"__arg0","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":132,"column":69},"end":{"line":132,"column":76}},"args":[]},{"id":"<tag>","kind":"tag","val":"__arg1","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":132,"column":76},"end":{"line":132,"column":84}},"args":[]},{"id":"<tag>","kind":"tag","val":"__arg2","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":132,"column":84},"end":{"line":132,"column":92}},"args":[]},{"id":"<tag>","kind":"tag","val":"__arg3","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":132,"column":92},"end":{"line":132,"column":100}},"args":[]}]}]}]},{"id":"<tag>","kind":"tag","val":"null","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":132,"column":102},"end":{"line":132,"column":108}},"args":[]}]}');
                                    definition.replaceTag('__arg0', args[0]);
                                    definition.replaceTag('__arg1', args[1]);
                                    definition.replaceTag('__arg2', args[2]);
                                    definition.replaceTag('__arg3', args[3]);
                                    _$7 = ast.newMeta(ast.newDo(definition));
                                    break _$8;
                                }
                            } else {
                                _$7 = null;
                            }
                            _$4 = _$7;
                            break _$5;
                        }
                        return _$4;
                    }
                }));
                ast.defineSymbol(ast.createMacro('#keepmacro', 'binaryKeyword', 'LOW', {
                    'postCombine': function (ast) {
                        var argsTuple, args, definition, result, _$4, _$5, _$6, _$7, _$8;
                        _$5: {
                            if (!ast.count === 2) {
                                _$6: {
                                    ast.error('Expected arguments: name and properties');
                                    return null;
                                }
                            }
                            argsTuple = ast.at(1).asTuple();
                            args = composeMacroArguments(ast.at(0), argsTuple);
                            if (args !== null) {
                                _$8: {
                                    definition = ast.fromJsonString('{"id":"<tuple>","kind":"builtin","val":null,"loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":154,"column":36},"end":{"line":154,"column":108}},"args":[{"id":"<call>","kind":"builtin","val":null,"loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":154,"column":53},"end":{"line":154,"column":101}},"args":[{"id":".","kind":"builtin","val":".","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":154,"column":40},"end":{"line":154,"column":40}},"args":[{"id":"<tag>","kind":"tag","val":"ast","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":154,"column":37},"end":{"line":154,"column":37}},"args":[]},{"id":"<name>","kind":"tag","val":"defineSymbol","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":154,"column":41},"end":{"line":154,"column":41}},"args":[]}]},{"id":"<call>","kind":"builtin","val":null,"loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":154,"column":53},"end":{"line":154,"column":101}},"args":[{"id":".","kind":"builtin","val":".","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":154,"column":57},"end":{"line":154,"column":57}},"args":[{"id":"<tag>","kind":"tag","val":"ast","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":154,"column":54},"end":{"line":154,"column":54}},"args":[]},{"id":"<name>","kind":"tag","val":"createMacro","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":154,"column":58},"end":{"line":154,"column":58}},"args":[]}]},{"id":"<tuple>","kind":"builtin","val":null,"loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":154,"column":69},"end":{"line":154,"column":100}},"args":[{"id":"<tag>","kind":"tag","val":"__arg0","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":154,"column":69},"end":{"line":154,"column":76}},"args":[]},{"id":"<tag>","kind":"tag","val":"__arg1","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":154,"column":76},"end":{"line":154,"column":84}},"args":[]},{"id":"<tag>","kind":"tag","val":"__arg2","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":154,"column":84},"end":{"line":154,"column":92}},"args":[]},{"id":"<tag>","kind":"tag","val":"__arg3","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":154,"column":92},"end":{"line":154,"column":100}},"args":[]}]}]}]},{"id":"<tag>","kind":"tag","val":"null","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":154,"column":102},"end":{"line":154,"column":108}},"args":[]}]}');
                                    definition.replaceTag('__arg0', args[0]);
                                    definition.replaceTag('__arg1', args[1]);
                                    definition.replaceTag('__arg2', args[2]);
                                    definition.replaceTag('__arg3', args[3]);
                                    result = ast.newMeta(ast.newDo(definition));
                                    result.sym = ast.keyScope.get('#keep-meta');
                                    _$7 = result;
                                    break _$8;
                                }
                            } else {
                                _$7 = null;
                            }
                            _$4 = _$7;
                            break _$5;
                        }
                        return _$4;
                    }
                }));
            }
            _$4: {
                ast.defineSymbol(ast.createMacro('~`', 'unary', 'LOW', {
                    'expand': function (ast) {
                        return undefined;
                    }
                }));
            }
            _$5: {
                ast.defineSymbol(ast.createMacro('`', 'unary', 'LOW', {
                    'doNotExpandChildren': true,
                    'expand': function (ast) {
                        var code, result, tagReplacements, unquoteIndex, _$6, _$7;
                        _$7: {
                            code = ast.at(0);
                            result = ast.fromJsonString('{"id":"<do>","kind":"builtin","val":null,"loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":180,"column":24},"end":{"line":184,"column":4}},"args":[{"id":"=","kind":"builtin","val":"=","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":181,"column":19},"end":{"line":181,"column":19}},"args":[{"id":"<vTagDeclaration>","kind":"tag","val":"codeTag","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":181,"column":6},"end":{"line":181,"column":11}},"args":[]},{"id":"#quote","kind":"builtin","val":"#quote","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":181,"column":21},"end":{"line":181,"column":21}},"args":[{"id":"<tag>","kind":"tag","val":"code","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":181,"column":28},"end":{"line":181,"column":28}},"args":[]}]}]},{"id":"<tag>","kind":"tag","val":"tagReplacements","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":182,"column":6},"end":{"line":182,"column":21}},"args":[]},{"id":"<vTag>","kind":"tag","val":"codeTag","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":183,"column":6},"end":{"line":183,"column":7}},"args":[]}]}');
                            tagReplacements = [];
                            unquoteIndex = 1;
                            code.forEachRecursive(function (child) {
                                var replacement, replacementName, replacementNameVal, replacementNameTag, tagReplacement, _$8, _$9, _$10, _$11;
                                _$9: {
                                    if (child.id === '~`') {
                                        _$10: {
                                            _$11: {
                                                replacement = child.at(0);
                                                replacementName = 'unquote' + unquoteIndex;
                                                replacementNameVal = child.newValue(replacementName);
                                                replacementNameTag = child.newTag(replacementName);
                                                tagReplacement = ast.fromJsonString('{"id":"<call>","kind":"builtin","val":null,"loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":194,"column":36},"end":{"line":194,"column":86}},"args":[{"id":".","kind":"builtin","val":".","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":194,"column":47},"end":{"line":194,"column":47}},"args":[{"id":"<vTag>","kind":"tag","val":"codeTag","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":194,"column":37},"end":{"line":194,"column":46}},"args":[]},{"id":"<name>","kind":"tag","val":"replaceTag","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":194,"column":48},"end":{"line":194,"column":48}},"args":[]}]},{"id":"<tuple>","kind":"builtin","val":null,"loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":194,"column":58},"end":{"line":194,"column":85}},"args":[{"id":"<tag>","kind":"tag","val":"quotedTagName","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":194,"column":58},"end":{"line":194,"column":72}},"args":[]},{"id":"<tag>","kind":"tag","val":"replacement","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":194,"column":72},"end":{"line":194,"column":85}},"args":[]}]}]}');
                                            }
                                            child.replaceWith(replacementNameTag);
                                            tagReplacement.replaceTag('quotedTagName', replacementNameVal);
                                            tagReplacement.replaceTag('replacement', replacement);
                                            tagReplacements.push(tagReplacement);
                                            unquoteIndex += 1;
                                        }
                                    }
                                    _$8 = undefined;
                                    break _$9;
                                }
                                return _$8;
                            });
                            result.replaceTag('code', code);
                            result.replaceTag('tagReplacements', tagReplacements);
                            result.resolveVirtual();
                            _$6 = result;
                            break _$7;
                        }
                        return _$6;
                    }
                }));
            }
            _$6: {
                ast.defineSymbol(ast.createMacro('do!', 'unary', 'LOW', {
                    'expand': function (ast) {
                        var body, statements, result, _$7, _$8, _$9, _$10, codeTag0;
                        _$8: {
                            body = ast.at(0);
                            statements = body.copy().asTuple();
                            _$10: {
                                codeTag0 = ast.fromJsonString('{"id":"<do>","kind":"builtin","val":null,"loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":212,"column":6},"end":{"line":215,"column":17}},"args":[{"id":"<tag>","kind":"tag","val":"unquote1","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":213,"column":8},"end":{"line":213,"column":8}},"args":[]},{"id":"<tag>","kind":"tag","val":"undefined","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":214,"column":8},"end":{"line":214,"column":17}},"args":[]}]}');
                                codeTag0.replaceTag('unquote1', statements.map(function (arg) {
                                    return arg;
                                }));
                                _$9 = codeTag0;
                                break _$10;
                            }
                            result = _$9;
                            _$7 = result;
                            break _$8;
                        }
                        return _$7;
                    }
                }));
            }
            _$7: {
                ast.defineSymbol(ast.createMacro('#metamodule', 'unary', 'LOW', {
                    'expand': function (ast) {
                        var body, _$8, _$9, _$10, _$11, codeTag0;
                        _$9: {
                            body = ast.at(0);
                            _$11: {
                                codeTag0 = ast.fromJsonString('{"id":"<tuple>","kind":"builtin","val":null,"loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":222,"column":6},"end":{"line":229,"column":0}},"args":[{"id":"<xTag>","kind":"tag","val":"module","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":222,"column":6},"end":{"line":222,"column":16}},"args":[]},{"id":"=","kind":"builtin","val":"=","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":223,"column":21},"end":{"line":223,"column":21}},"args":[{"id":".","kind":"builtin","val":".","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":223,"column":12},"end":{"line":223,"column":12}},"args":[{"id":"<tag>","kind":"tag","val":"module","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":223,"column":6},"end":{"line":223,"column":6}},"args":[]},{"id":"<name>","kind":"tag","val":"exports","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":223,"column":13},"end":{"line":223,"column":13}},"args":[]}]},{"id":"->","kind":"builtin","val":"->","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":223,"column":29},"end":{"line":223,"column":29}},"args":[{"id":"<argument>","kind":"tag","val":"ast","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":223,"column":23},"end":{"line":223,"column":27}},"args":[]},{"id":"<do>","kind":"builtin","val":null,"loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":224,"column":8},"end":{"line":229,"column":14}},"args":[{"id":"<do>","kind":"builtin","val":null,"loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":225,"column":10},"end":{"line":227,"column":19}},"args":[{"id":"<tag>","kind":"tag","val":"unquote1","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":226,"column":12},"end":{"line":227,"column":10}},"args":[]}]},{"id":"<tag>","kind":"tag","val":"null","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":227,"column":10},"end":{"line":227,"column":14}},"args":[]}]}]}]}]}');
                                codeTag0.replaceTag('unquote1', body);
                                _$10 = codeTag0;
                                break _$11;
                            }
                            _$8 = _$10;
                            break _$9;
                        }
                        return _$8;
                    }
                }));
            }
            _$8: {
                ast.defineSymbol(ast.createMacro('#metaimport', 'unary', 'LOW', {
                    'postCombine': function (ast) {
                        var moduleNames, moduleStrings, _$9, _$10, _$11, _$12, codeTag0;
                        _$10: {
                            moduleNames = ast.at(0);
                            moduleStrings = moduleNames.asTuple().map(function (moduleName) {
                                var moduleString, _$11, _$12, _$13, _$14;
                                _$12: {
                                    moduleString = moduleName.getSimpleValue();
                                    if (typeof moduleString !== 'string') {
                                        _$14: {
                                            moduleName.error('Invalid module name');
                                            _$13 = moduleName;
                                            break _$14;
                                        }
                                    } else {
                                        _$13 = moduleName.newValue(moduleString);
                                    }
                                    _$11 = _$13;
                                    break _$12;
                                }
                                return _$11;
                            });
                            _$12: {
                                codeTag0 = ast.fromJsonString('{"id":"<tuple>","kind":"builtin","val":null,"loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":243,"column":8},"end":{"line":251,"column":0}},"args":[{"id":"try","kind":"builtin","val":"try","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":243,"column":8},"end":{"line":243,"column":8}},"args":[{"id":"<tuple>","kind":"builtin","val":null,"loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":244,"column":10},"end":{"line":247,"column":8}},"args":[{"id":"=","kind":"builtin","val":"=","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":244,"column":26},"end":{"line":244,"column":26}},"args":[{"id":"<tagDeclaration>","kind":"tag","val":"metaRequire","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":244,"column":10},"end":{"line":244,"column":14}},"args":[]},{"id":"<call>","kind":"builtin","val":null,"loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":244,"column":52},"end":{"line":244,"column":79}},"args":[{"id":"<call>","kind":"builtin","val":null,"loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":244,"column":28},"end":{"line":244,"column":51}},"args":[{"id":"<tag>","kind":"tag","val":"require","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":244,"column":29},"end":{"line":244,"column":29}},"args":[]},{"id":"<value>","kind":"value","val":"require-like","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":244,"column":37},"end":{"line":244,"column":50}},"args":[]}]},{"id":".","kind":"builtin","val":".","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":244,"column":52},"end":{"line":244,"column":79}},"args":[{"id":".","kind":"builtin","val":".","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":244,"column":65},"end":{"line":244,"column":65}},"args":[{"id":".","kind":"builtin","val":".","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":244,"column":56},"end":{"line":244,"column":56}},"args":[{"id":"<tag>","kind":"tag","val":"ast","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":244,"column":53},"end":{"line":244,"column":53}},"args":[]},{"id":"<name>","kind":"tag","val":"compiler","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":244,"column":57},"end":{"line":244,"column":57}},"args":[]}]},{"id":"<name>","kind":"tag","val":"parser","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":244,"column":66},"end":{"line":244,"column":66}},"args":[]}]},{"id":"<name>","kind":"tag","val":"source","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":244,"column":73},"end":{"line":244,"column":73}},"args":[]}]}]}]},{"id":"<call>","kind":"builtin","val":null,"loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":246,"column":12},"end":{"line":247,"column":8}},"args":[{"id":".","kind":"builtin","val":".","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":245,"column":27},"end":{"line":245,"column":27}},"args":[{"id":"<array>","kind":"builtin","val":null,"loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":245,"column":10},"end":{"line":245,"column":26}},"args":[{"id":"<tag>","kind":"tag","val":"unquote1","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":245,"column":11},"end":{"line":245,"column":11}},"args":[]}]},{"id":"<name>","kind":"tag","val":"forEach","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":245,"column":28},"end":{"line":245,"column":28}},"args":[]}]},{"id":"->","kind":"builtin","val":"->","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":246,"column":12},"end":{"line":247,"column":8}},"args":[{"id":"<argument>","kind":"tag","val":"m","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":246,"column":12},"end":{"line":246,"column":12}},"args":[]},{"id":"<call>","kind":"builtin","val":null,"loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":246,"column":33},"end":{"line":246,"column":37}},"args":[{"id":"<call>","kind":"builtin","val":null,"loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":246,"column":17},"end":{"line":246,"column":31}},"args":[{"id":"<tag>","kind":"tag","val":"metaRequire","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":246,"column":18},"end":{"line":246,"column":18}},"args":[]},{"id":"<tag>","kind":"tag","val":"m","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":246,"column":30},"end":{"line":246,"column":30}},"args":[]}]},{"id":"<tag>","kind":"tag","val":"ast","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":246,"column":33},"end":{"line":246,"column":37}},"args":[]}]}]}]}]},{"id":"catch","kind":"builtin","val":"catch","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":247,"column":8},"end":{"line":247,"column":8}},"args":[{"id":"<tagDeclaration>","kind":"tag","val":"e","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":247,"column":14},"end":{"line":247,"column":20}},"args":[]},{"id":"<call>","kind":"builtin","val":null,"loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":248,"column":10},"end":{"line":249,"column":8}},"args":[{"id":".","kind":"builtin","val":".","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":248,"column":13},"end":{"line":248,"column":13}},"args":[{"id":"<tag>","kind":"tag","val":"ast","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":248,"column":10},"end":{"line":248,"column":10}},"args":[]},{"id":"<name>","kind":"tag","val":"error","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":248,"column":14},"end":{"line":248,"column":14}},"args":[]}]},{"id":"+","kind":"builtin","val":"+","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":248,"column":19},"end":{"line":248,"column":61}},"args":[{"id":"<value>","kind":"value","val":"Error importing module: ","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":248,"column":20},"end":{"line":248,"column":45}},"args":[]},{"id":"<call>","kind":"builtin","val":null,"loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":248,"column":59},"end":{"line":248,"column":60}},"args":[{"id":".","kind":"builtin","val":".","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":248,"column":50},"end":{"line":248,"column":50}},"args":[{"id":"<tag>","kind":"tag","val":"e","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":248,"column":49},"end":{"line":248,"column":49}},"args":[]},{"id":"<name>","kind":"tag","val":"toString","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":248,"column":51},"end":{"line":248,"column":51}},"args":[]}]},{"id":"<tuple>","kind":"builtin","val":null,"loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":248,"column":59},"end":{"line":248,"column":60}},"args":[]}]}]}]}]}]},{"id":"<tag>","kind":"tag","val":"null","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":249,"column":8},"end":{"line":249,"column":12}},"args":[]}]}');
                                codeTag0.replaceTag('unquote1', moduleStrings);
                                _$11 = codeTag0;
                                break _$12;
                            }
                            _$9 = moduleNames.newMeta(_$11);
                            break _$10;
                        }
                        return _$9;
                    }
                }));
            }
            _$9: {
                ast.defineSymbol(ast.createMacro('while', 'binaryKeyword', 'LOW', {
                    'expand': function (ast) {
                        var body, condition, _$10, _$11, _$12, _$13, codeTag0;
                        _$11: {
                            body = ast.at(1);
                            condition = ast.at(0);
                            _$13: {
                                codeTag0 = ast.fromJsonString('{"id":"loop","kind":"builtin","val":"loop","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":255,"column":6},"end":{"line":255,"column":6}},"args":[{"id":"<tuple>","kind":"builtin","val":null,"loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":255,"column":11},"end":{"line":255,"column":12}},"args":[]},{"id":"if","kind":"builtin","val":"if","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":256,"column":6},"end":{"line":261,"column":0}},"args":[{"id":"<tag>","kind":"tag","val":"unquote1","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":256,"column":9},"end":{"line":256,"column":22}},"args":[]},{"id":"<do>","kind":"builtin","val":null,"loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":256,"column":24},"end":{"line":261,"column":0}},"args":[{"id":"<do>","kind":"builtin","val":null,"loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":257,"column":8},"end":{"line":259,"column":17}},"args":[{"id":"<tag>","kind":"tag","val":"unquote2","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":258,"column":10},"end":{"line":259,"column":8}},"args":[]}]},{"id":"next!","kind":"builtin","val":"next!","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":259,"column":8},"end":{"line":259,"column":8}},"args":[{"id":"<tuple>","kind":"builtin","val":null,"loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":259,"column":14},"end":{"line":259,"column":15}},"args":[]}]}]}]}]}');
                                codeTag0.replaceTag('unquote1', condition);
                                codeTag0.replaceTag('unquote2', body);
                                _$12 = codeTag0;
                                break _$13;
                            }
                            _$10 = _$12;
                            break _$11;
                        }
                        return _$10;
                    }
                }));
            }
            _$10: {
                ast.defineSymbol(ast.createMacro('.->', 'binary', 'MEMBER', {
                    'expand': function (ast) {
                        var following, start, current, others, getLeftmost, other, otherLeftmost, otherParent, _$11, _$12, _$13, _$14, _$15, _$16, _$17, _$18, _$19, codeTag0, _$20, _$21, _$22, codeTag1;
                        _$12: {
                            following = ast.at(1);
                            start = ast.at(0);
                            _$13: {
                                current = start;
                                others = following.asTuple();
                                getLeftmost = function (root) {
                                    var _$14, _$15, _$16, _$17, _$18;
                                    _$15: {
                                        _$16:
                                            while (true) {
                                                if (root.isCall() || root.isMember()) {
                                                    _$17: {
                                                        _$18: {
                                                            root = root.at(0);
                                                        }
                                                        continue;
                                                    }
                                                }
                                                break _$16;
                                            }
                                        _$14 = root;
                                        break _$15;
                                    }
                                    return _$14;
                                };
                            }
                            _$14:
                                while (true) {
                                    if (others.count > 0) {
                                        _$15: {
                                            _$16: {
                                                _$17: {
                                                    other = others.shift();
                                                    otherLeftmost = getLeftmost(other);
                                                }
                                                if (otherLeftmost.parent === null) {
                                                    _$19: {
                                                        codeTag0 = ast.fromJsonString('{"id":".","kind":"builtin","val":".","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":278,"column":23},"end":{"line":278,"column":23}},"args":[{"id":"<tag>","kind":"tag","val":"unquote1","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":278,"column":12},"end":{"line":278,"column":22}},"args":[]},{"id":"<tag>","kind":"tag","val":"unquote2","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":278,"column":24},"end":{"line":278,"column":41}},"args":[]}]}');
                                                        codeTag0.replaceTag('unquote1', current);
                                                        codeTag0.replaceTag('unquote2', otherLeftmost);
                                                        _$18 = codeTag0;
                                                        break _$19;
                                                    }
                                                } else {
                                                    _$20: {
                                                        otherParent = otherLeftmost.parent;
                                                        otherParent.shift();
                                                        _$22: {
                                                            codeTag1 = ast.fromJsonString('{"id":".","kind":"builtin","val":".","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":282,"column":44},"end":{"line":282,"column":44}},"args":[{"id":"<tag>","kind":"tag","val":"unquote1","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":282,"column":33},"end":{"line":282,"column":43}},"args":[]},{"id":"<tag>","kind":"tag","val":"unquote2","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":282,"column":45},"end":{"line":282,"column":62}},"args":[]}]}');
                                                            codeTag1.replaceTag('unquote1', current);
                                                            codeTag1.replaceTag('unquote2', otherLeftmost);
                                                            _$21 = codeTag1;
                                                            break _$22;
                                                        }
                                                        otherParent.unshift(_$21);
                                                        _$18 = other;
                                                        break _$20;
                                                    }
                                                }
                                                current = _$18;
                                            }
                                            continue;
                                        }
                                    }
                                    break _$14;
                                }
                            _$11 = current;
                            break _$12;
                        }
                        return _$11;
                    }
                }));
            }
            _$11: {
                ast.defineSymbol(ast.createMacro('<-', 'binary', 'MEDIUM', {
                    'expand': function (ast) {
                        var args, callee, _$12, _$13, _$14, _$15, codeTag0;
                        _$13: {
                            args = ast.at(1);
                            callee = ast.at(0);
                            _$15: {
                                codeTag0 = ast.fromJsonString('{"id":"<call>","kind":"builtin","val":null,"loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":290,"column":16},"end":{"line":290,"column":23}},"args":[{"id":"<tag>","kind":"tag","val":"unquote1","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":290,"column":6},"end":{"line":290,"column":15}},"args":[]},{"id":"<tag>","kind":"tag","val":"unquote2","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":290,"column":16},"end":{"line":290,"column":23}},"args":[]}]}');
                                codeTag0.replaceTag('unquote1', callee);
                                codeTag0.replaceTag('unquote2', args);
                                _$14 = codeTag0;
                                break _$15;
                            }
                            _$12 = _$14;
                            break _$13;
                        }
                        return _$12;
                    }
                }));
            }
            _$12: {
                ast.defineSymbol(ast.createMacro('#->', 'unary', 'LOW', {
                    'expand': function (ast) {
                        var body, args, processNext, n, currentId, currentArgName, _$13, _$14, _$15, _$16, _$17, _$18, _$19, codeTag0;
                        _$14: {
                            body = ast.at(0);
                            if (typeof body === 'undefined' || body.isPlaceholder() && body.getSimpleValue() === null) {
                                body = ast.newTag('undefined');
                            }
                            args = ast.newTuple();
                            processNext = true;
                            n = 1;
                            _$15:
                                while (true) {
                                    if (processNext) {
                                        _$16: {
                                            processNext = false;
                                            _$17: {
                                                currentId = '#' + n;
                                                currentArgName = '__$arg$' + n;
                                            }
                                            body.forEachRecursive(function (node) {
                                                var _$18, _$19, _$20, _$21;
                                                _$19: {
                                                    if (node.isPlaceholder() && (node.getSimpleValue() === currentId || n === 1 && node.getSimpleValue() === '#it')) {
                                                        _$20: {
                                                            if (!processNext) {
                                                                _$21: {
                                                                    processNext = true;
                                                                    args.push(ast.newTag(currentArgName).handleAsFunctionArgument());
                                                                }
                                                            }
                                                            node.replaceWith(node.newTag(currentArgName));
                                                        }
                                                    }
                                                    _$18 = undefined;
                                                    break _$19;
                                                }
                                                return _$18;
                                            });
                                            n = n + 1;
                                            continue;
                                        }
                                    }
                                    break _$15;
                                }
                            _$19: {
                                codeTag0 = ast.fromJsonString('{"id":"->","kind":"builtin","val":"->","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":333,"column":15},"end":{"line":333,"column":15}},"args":[{"id":"<argument>","kind":"tag","val":"unquote1","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":333,"column":5},"end":{"line":333,"column":13}},"args":[]},{"id":"<tag>","kind":"tag","val":"unquote2","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":333,"column":18},"end":{"line":333,"column":26}},"args":[]}]}');
                                codeTag0.replaceTag('unquote1', args);
                                codeTag0.replaceTag('unquote2', body);
                                _$18 = codeTag0;
                                break _$19;
                            }
                            _$13 = _$18;
                            break _$14;
                        }
                        return _$13;
                    }
                }));
            }
            _$13: {
                ast.defineSymbol(ast.createMacro('=>', 'binary', 'FUNCTION', {
                    'leftPrecedence': 'FUNCTION-LEFT',
                    'expand': function (ast) {
                        var rhs, lhs, traverser, result, _$14, _$15, _$16, _$17, codeTag0;
                        _$15: {
                            rhs = ast.at(1);
                            lhs = ast.at(0);
                            traverser = function (__$arg$1) {
                                var _$16, _$17, _$18, _$19, codeTag0;
                                _$17: {
                                    if (__$arg$1.isTag() && __$arg$1.getTag() === 'this') {
                                        _$19: {
                                            codeTag0 = ast.fromJsonString('{"id":"<vTag>","kind":"tag","val":"captured-this","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":344,"column":26},"end":{"line":344,"column":27}},"args":[]}');
                                            _$18 = codeTag0;
                                            break _$19;
                                        }
                                        __$arg$1.replaceWith(_$18);
                                    }
                                    if (!__$arg$1.isFunctionDefinition()) {
                                        __$arg$1.forEach(function (__$arg$1) {
                                            return traverser(__$arg$1);
                                        });
                                    }
                                    _$16 = undefined;
                                    break _$17;
                                }
                                return _$16;
                            };
                            traverser(rhs);
                            _$17: {
                                codeTag0 = ast.fromJsonString('{"id":"<do>","kind":"builtin","val":null,"loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":348,"column":19},"end":{"line":351,"column":4}},"args":[{"id":"=","kind":"builtin","val":"=","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":349,"column":25},"end":{"line":349,"column":25}},"args":[{"id":"<vTagDeclaration>","kind":"tag","val":"captured-this","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":349,"column":6},"end":{"line":349,"column":11}},"args":[]},{"id":"<tag>","kind":"tag","val":"this","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":349,"column":27},"end":{"line":349,"column":27}},"args":[]}]},{"id":"->","kind":"builtin","val":"->","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":350,"column":15},"end":{"line":350,"column":15}},"args":[{"id":"<argument>","kind":"tag","val":"unquote1","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":350,"column":6},"end":{"line":350,"column":13}},"args":[]},{"id":"<tag>","kind":"tag","val":"unquote2","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":350,"column":18},"end":{"line":350,"column":25}},"args":[]}]}]}');
                                codeTag0.replaceTag('unquote1', lhs);
                                codeTag0.replaceTag('unquote2', rhs);
                                _$16 = codeTag0;
                                break _$17;
                            }
                            result = _$16;
                            result.resolveVirtual();
                            _$14 = result;
                            break _$15;
                        }
                        return _$14;
                    }
                }));
            }
            _$14: {
                ast.defineSymbol(ast.createMacro('#js', 'unary', 'HIGH', {
                    'expand': function (ast) {
                        var expr, code, _$15, _$16, _$17, _$18, codeTag0;
                        _$16: {
                            expr = ast.at(0);
                            _$18: {
                                codeTag0 = ast.fromJsonString('{"id":"<call>","kind":"builtin","val":null,"loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":364,"column":33},"end":{"line":364,"column":44}},"args":[{"id":"<xTag>","kind":"tag","val":"eval","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":364,"column":17},"end":{"line":364,"column":32}},"args":[]},{"id":"<tag>","kind":"tag","val":"unquote1","loc":{"source":"/ssd/massi/metascript/lib/core-macros.mjs","start":{"line":364,"column":33},"end":{"line":364,"column":44}},"args":[]}]}');
                                codeTag0.replaceTag('unquote1', expr);
                                _$17 = codeTag0;
                                break _$18;
                            }
                            code = _$17;
                            if (expr.isValue()) {
                                code.set('js', expr.getValue());
                            }
                            _$15 = code;
                            break _$16;
                        }
                        return _$15;
                    }
                }));
            }
            _$15: {
                ast.defineSymbol(ast.createMacro('#no-new-scope', 'unary', 'LOW', {
                    'expand': function (ast) {
                        var expr, _$16, _$17;
                        _$17: {
                            expr = ast.at(0);
                            expr.set('no-new-scope', true);
                            _$16 = expr;
                            break _$17;
                        }
                        return _$16;
                    }
                }));
            }
            _$1 = null;
            break _$2;
        }
        return _$1;
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9zc2QvbWFzc2kvbWV0YXNjcmlwdC9saWIvY29yZS1tYWNyb3MubWpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJhc3QiLCJjb21wb3NlTWFjcm9Bcmd1bWVudHMiLCJuYW1lQXJnIiwiYXJnc1R1cGxlIiwibmFtZVZhbHVlIiwiZ2V0U2ltcGxlVmFsdWUiLCJudWxsIiwiZXJyb3IiLCJpc1R1cGxlIiwib2siLCJ0cnVlIiwibmFtZSIsIm5ld1ZhbHVlIiwiYXJpdHkiLCJwcmVjZWRlbmNlIiwib3B0aW9ucyIsIm5ld09iamVjdExpdGVyYWwiLCJpbmRleCIsImNvdW50IiwiYXJnIiwiYXQiLCJzaW1wbGVWYWx1ZSIsImZhbHNlIiwiaXNQcm9wZXJ0eSIsInNraXAiLCJwcm9wZXJ0eSIsImNvcHkiLCJ2YWx1ZSIsInByb3BlcnR5TmFtZSIsInNpbXBsZVByb3BlcnR5VmFsdWUiLCJpc0Z1bmN0aW9uRGVmaW5pdGlvbiIsImZ1bmMiLCJtYWNyb0JvZHkiLCJwb3AiLCJhc1R1cGxlIiwibWFjcm9BcmdzIiwicHVzaCIsIm5ld1RhZyIsImFyZ0luZGV4IiwibWFjcm9BcmciLCJpc1RhZyIsImFyZ0RlY2xhcmF0aW9uIiwiZnJvbUpzb25TdHJpbmciLCJyZXBsYWNlVGFnIiwiZ2V0VGFnIiwiaGFuZGxlQXNUYWdEZWNsYXJhdGlvbiIsInVuc2hpZnQiLCJfJDIyIiwiXyQ0IiwiZGVmaW5lU3ltYm9sIiwiY3JlYXRlTWFjcm8iLCJjb2RlIiwiaW5uZXJEbyIsIm5ld0RvIiwibmV3TWV0YSIsInRhaWwiLCJhcmdzIiwicmVzdWx0IiwiXyQ3IiwiZGVmaW5pdGlvbiIsInN5bSIsImtleVNjb3BlIiwiZ2V0IiwidW5kZWZpbmVkIiwidGFnUmVwbGFjZW1lbnRzIiwidW5xdW90ZUluZGV4IiwiZm9yRWFjaFJlY3Vyc2l2ZSIsImNoaWxkIiwiaWQiLCJyZXBsYWNlbWVudCIsInJlcGxhY2VtZW50TmFtZSIsInJlcGxhY2VtZW50TmFtZVZhbCIsInJlcGxhY2VtZW50TmFtZVRhZyIsInRhZ1JlcGxhY2VtZW50IiwicmVwbGFjZVdpdGgiLCJfJDgiLCJyZXNvbHZlVmlydHVhbCIsIl8kNiIsImJvZHkiLCJzdGF0ZW1lbnRzIiwiY29kZVRhZzAiLCJtYXAiLCJfJDkiLCJfJDEwIiwibW9kdWxlTmFtZXMiLCJtb2R1bGVTdHJpbmdzIiwibW9kdWxlTmFtZSIsIm1vZHVsZVN0cmluZyIsIl8kMTMiLCJfJDExIiwiY29uZGl0aW9uIiwiXyQxMiIsImZvbGxvd2luZyIsInN0YXJ0IiwiY3VycmVudCIsIm90aGVycyIsImdldExlZnRtb3N0Iiwicm9vdCIsImlzQ2FsbCIsImlzTWVtYmVyIiwiXyQxNCIsIm90aGVyIiwic2hpZnQiLCJvdGhlckxlZnRtb3N0IiwicGFyZW50IiwiXyQxOCIsIm90aGVyUGFyZW50IiwiY29kZVRhZzEiLCJfJDIxIiwiY2FsbGVlIiwiaXNQbGFjZWhvbGRlciIsIm5ld1R1cGxlIiwicHJvY2Vzc05leHQiLCJuIiwiY3VycmVudElkIiwiY3VycmVudEFyZ05hbWUiLCJub2RlIiwiaGFuZGxlQXNGdW5jdGlvbkFyZ3VtZW50IiwicmhzIiwibGhzIiwidHJhdmVyc2VyIiwiX18kYXJnJDEiLCJmb3JFYWNoIiwiXyQxNiIsImV4cHIiLCJfJDE3IiwiaXNWYWx1ZSIsInNldCIsImdldFZhbHVlIiwiXyQxNSIsIl8kMSJdLCJtYXBwaW5ncyI6IkFBQUEsSSxHQUFBLEM7QUFBQTtBQUFBLElBRUFBLE1BQU0sQ0FBQ0MsT0FBUSxHQUFRLFVBQU5DLEdBQU07QUFBQSxZLHFCQUFBLEUsR0FBQSxFLEdBQUEsRSxHQUFBLEUsR0FBQSxFLEdBQUEsRSxHQUFBLEUsR0FBQSxFLEdBQUEsRSxHQUFBLEUsSUFBQSxFLElBQUEsRSxJQUFBLEUsSUFBQSxFLElBQUEsRSxJQUFBO0FBQUEsUUFBRztBQUFBLFlBR3hCO0FBQUEsZ0JBQUFDLHFCQUEwQixHQUF1QixVQUFyQkMsT0FBcUIsRUFBYkMsU0FBYTtBQUFBLHdCLFNBQUEsRSxFQUFBLEUsSUFBQSxFLEtB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QUEsYUEvVjBCO0FBQUEsWUE4VzFCO0FBQUEsZ0JBQUFqSSxHQUFBLENBQUFpRCxZQUFBLENBQUFqRCxHQUFBLENBQUFrRCxXQUFBLENBQVcsZUFBWCxFQUNFLE9BREYsRUFFRSxLQUZGLEVBNVdBO0FBQUEsb0JBK1dpQixRLEVBQUEsVUFBVGxELEdBQVM7QUFBQSw0QixJQUFBLEUsSUFBQSxFLElBQUE7QUFBQSx3QkFDYjtBQUFBLDRCQURNNEgsSUEvV1YsR0FBQTVILEdBQUEsQ0FBQW9CLEVBQUEsQ0ErV1UsQ0EvV1YsRUFnWEk7QUFBQSw0QkFBQXdHLElBQUksQ0FBQ0csR0FBRyxpQkFBZXJILElBQWYsRUFBUjtBQUFBLDRCQUNBaUgsSUFBQSxHQUFBQyxJQUFBLENBREE7QUFBQTtBQUFBLHlCQURhO0FBQUEsK0JBQ2JELElBRGE7QUFBQSxxQkEvV2pCO0FBQUEsaUJBNFdBO0FBQUEsYUE5VzBCO0FBQUEsWUFzWDFCTyxHQUFBLEdBQUE1SCxJQUFBLENBdFgwQjtBQUFBO0FBQUEsU0FBSDtBQUFBLGVBQUc0SCxHQUFIO0FBQUEsS0FBUixDQUZmO0FBQUEiLCJzb3VyY2VzQ29udGVudCI6WyIjZXh0ZXJuYWwgbW9kdWxlXG5cbm1vZHVsZS5leHBvcnRzID0gKGFzdCkgLT4gZG8gKFxuXG4jbWV0YVxuICB2YXIgY29tcG9zZU1hY3JvQXJndW1lbnRzID0gKG5hbWVBcmcsIGFyZ3NUdXBsZSkgLT5cbiAgICB2YXIgbmFtZVZhbHVlID0gbmFtZUFyZy5nZXRTaW1wbGVWYWx1ZSgpXG4gICAgaWYgKG5hbWVWYWx1ZSA9PSBudWxsKVxuICAgICAgYXJnc1R1cGxlLmVycm9yICdJbnZhbGlkIG5hbWUgYXJndW1lbnQnXG4gICAgICByZXR1cm4gbnVsbFxuICAgIGlmICghKGFyZ3NUdXBsZS5pc1R1cGxlKCkpKVxuICAgICAgYXJnc1R1cGxlLmVycm9yICdFeHBlY3RlZCB0dXBsZSBhcmd1bWVudCdcbiAgICAgIHJldHVybiBudWxsXG4gICAgdmFyXG4gICAgICBvayA9IHRydWVcbiAgICAgIG5hbWUgPSBuYW1lQXJnLm5ld1ZhbHVlIG5hbWVWYWx1ZVxuICAgICAgYXJpdHkgPSBhc3QubmV3VmFsdWUgJ3VuYXJ5J1xuICAgICAgcHJlY2VkZW5jZSA9IGFzdC5uZXdWYWx1ZSAnTE9XJ1xuICAgICAgb3B0aW9ucyA9IGFzdC5uZXdPYmplY3RMaXRlcmFsKClcbiAgICBsb29wICh2YXIgaW5kZXggPSAwKVxuICAgICAgaWYgKGluZGV4IDwgYXJnc1R1cGxlLmNvdW50KVxuICAgICAgICB2YXIgYXJnID0gYXJnc1R1cGxlLmF0IGluZGV4XG4gICAgICAgIHZhciBzaW1wbGVWYWx1ZSA9IGFyZy5nZXRTaW1wbGVWYWx1ZSgpXG4gICAgICAgIGlmIChzaW1wbGVWYWx1ZSAhPSBudWxsKVxuICAgICAgICAgIGlmIChpbmRleCA9PSAwKVxuICAgICAgICAgICAgYXJpdHkgPSBhcmcubmV3VmFsdWUgc2ltcGxlVmFsdWVcbiAgICAgICAgICBlbHNlIGlmIChpbmRleCA9PSAxKVxuICAgICAgICAgICAgcHJlY2VkZW5jZSA9IGFyZy5uZXdWYWx1ZSBzaW1wbGVWYWx1ZVxuICAgICAgICAgIGVsc2VcbiAgICAgICAgICAgIGFyZy5lcnJvcignSW52YWxpZCBzaW1wbGUgcHJvcGVydHknKVxuICAgICAgICAgICAgb2sgPSBmYWxzZVxuICAgICAgICBlbHNlIGlmIChhcmcuaXNQcm9wZXJ0eSgpKVxuICAgICAgICAgIHZhciBza2lwID0gZmFsc2VcbiAgICAgICAgICB2YXIgcHJvcGVydHkgPSBhcmcuY29weSgpXG4gICAgICAgICAgdmFyIHZhbHVlID0gcHJvcGVydHkuYXQgMVxuICAgICAgICAgIHZhciBwcm9wZXJ0eU5hbWUgPSAocHJvcGVydHkuYXQgMCkuZ2V0U2ltcGxlVmFsdWUoKVxuICAgICAgICAgIHZhciBzaW1wbGVQcm9wZXJ0eVZhbHVlID0gdmFsdWUuZ2V0U2ltcGxlVmFsdWUoKVxuICAgICAgICAgIGlmIChwcm9wZXJ0eU5hbWUgPT0gJ2FyaXR5JyAmJiBzaW1wbGVQcm9wZXJ0eVZhbHVlICE9IG51bGwpXG4gICAgICAgICAgICBhcml0eSA9IGFyZy5uZXdWYWx1ZSBzaW1wbGVQcm9wZXJ0eVZhbHVlXG4gICAgICAgICAgICBza2lwID0gdHJ1ZVxuICAgICAgICAgIGVsc2UgaWYgKHByb3BlcnR5TmFtZSA9PSAncHJlY2VkZW5jZScgJiYgc2ltcGxlUHJvcGVydHlWYWx1ZSAhPSBudWxsKVxuICAgICAgICAgICAgcHJlY2VkZW5jZSA9IGFyZy5uZXdWYWx1ZSBzaW1wbGVQcm9wZXJ0eVZhbHVlXG4gICAgICAgICAgICBza2lwID0gdHJ1ZVxuICAgICAgICAgIGVsc2UgaWYgKHZhbHVlLmlzRnVuY3Rpb25EZWZpbml0aW9uKCkpXG4gICAgICAgICAgICB2YXIgZnVuYyA9IHZhbHVlLmNvcHkoKVxuICAgICAgICAgICAgdmFyIG1hY3JvQm9keSA9IGZ1bmMucG9wKCkuYXNUdXBsZSgpXG4gICAgICAgICAgICB2YXIgbWFjcm9BcmdzID0gZnVuYy5wb3AoKS5hc1R1cGxlKClcbiAgICAgICAgICAgIGZ1bmMgLnB1c2goYXJnLm5ld1RhZyAnYXN0JylcbiAgICAgICAgICAgIGZ1bmMucHVzaCBtYWNyb0JvZHlcbiAgICAgICAgICAgIGxvb3AgKHZhciBhcmdJbmRleCA9IDApXG4gICAgICAgICAgICAgIGlmIChhcmdJbmRleCA8IG1hY3JvQXJncy5jb3VudClcbiAgICAgICAgICAgICAgICB2YXIgbWFjcm9BcmcgPSBtYWNyb0FyZ3MuYXQgYXJnSW5kZXhcbiAgICAgICAgICAgICAgICBpZiAobWFjcm9BcmcuaXNUYWcoKSlcbiAgICAgICAgICAgICAgICAgIHZhciBhcmdEZWNsYXJhdGlvbiA9ICNxdW90ZSB2YXIgX19hcmdOYW1lID0gYXN0LmF0IF9fYXJnSW5kZXhcbiAgICAgICAgICAgICAgICAgIGFyZ0RlY2xhcmF0aW9uLnJlcGxhY2VUYWcoJ19fYXJnTmFtZScsIChtYWNyb0FyZy5uZXdUYWcobWFjcm9BcmcuZ2V0VGFnKCkpKS5oYW5kbGVBc1RhZ0RlY2xhcmF0aW9uKCkpXG4gICAgICAgICAgICAgICAgICBhcmdEZWNsYXJhdGlvbi5yZXBsYWNlVGFnKCdfX2FyZ0luZGV4JywgbWFjcm9BcmcubmV3VmFsdWUoYXJnSW5kZXgpKVxuICAgICAgICAgICAgICAgICAgbWFjcm9Cb2R5LnVuc2hpZnQgYXJnRGVjbGFyYXRpb25cbiAgICAgICAgICAgICAgICBlbHNlXG4gICAgICAgICAgICAgICAgICBtYWNyb0FyZy5lcnJvciAnQXJndW1lbnQgbmFtZSBleHBlY3RlZCdcbiAgICAgICAgICAgICAgICAgIG9rID0gZmFsc2VcbiAgICAgICAgICAgICAgICBuZXh0ISBhcmdJbmRleCArIDFcbiAgICAgICAgICAgIGlmIG9rXG4gICAgICAgICAgICAgIHByb3BlcnR5LnBvcCgpXG4gICAgICAgICAgICAgIHByb3BlcnR5LnB1c2ggZnVuY1xuICAgICAgICAgIGlmICghc2tpcClcbiAgICAgICAgICAgIG9wdGlvbnMucHVzaCBwcm9wZXJ0eVxuICAgICAgICBlbHNlXG4gICAgICAgICAgYXJnLmVycm9yKCdJbnZhbGlkIHByb3BlcnR5JylcbiAgICAgICAgICBvayA9IGZhbHNlXG4gICAgICAgIG5leHQhIGluZGV4ICsgMVxuICAgIGlmIG9rIFtuYW1lLCBhcml0eSwgcHJlY2VkZW5jZSwgb3B0aW9uc10gZWxzZSBudWxsXG5cbiAgYXN0LmRlZmluZVN5bWJvbFxuICAgIGFzdC5jcmVhdGVNYWNyb1xuICAgICAgJyNleGVjLW1ldGEnXG4gICAgICAndW5hcnknXG4gICAgICAnTE9XJ1xuICAgICAge1xuICAgICAgICBwb3N0Q29tYmluZTogKGFzdCkgLT5cbiAgICAgICAgICB2YXIgY29kZSA9IChhc3QuYXQgMCkuY29weSgpXG4gICAgICAgICAgdmFyIGlubmVyRG8gPSBhc3QubmV3RG8oW2NvZGUuY29weSgpLCBhc3QubmV3VGFnICdudWxsJ10pXG4gICAgICAgICAgYXN0Lm5ld01ldGEgaW5uZXJEb1xuICAgICAgfVxuICBhc3QuZGVmaW5lU3ltYm9sXG4gICAgYXN0LmNyZWF0ZU1hY3JvXG4gICAgICAnI2tlZXAtbWV0YSdcbiAgICAgICd1bmFyeSdcbiAgICAgICdMT1cnXG4gICAgICB7XG4gICAgICAgIHBvc3RDb21iaW5lOiAoYXN0KSAtPlxuICAgICAgICAgIHZhciBjb2RlID0gKGFzdC5hdCAwKS5jb3B5KClcbiAgICAgICAgICB2YXIgdGFpbCA9ICNxdW90ZSAoYXN0LmF0KDApLmF0KDApLmNvcHkoKSlcbiAgICAgICAgICB2YXIgaW5uZXJEbyA9IGFzdC5uZXdEbyhbY29kZS5jb3B5KCksIHRhaWxdKVxuICAgICAgICAgIGFzdC5uZXdNZXRhIGlubmVyRG9cbiAgICAgIH1cblxuICBhc3QuZGVmaW5lU3ltYm9sXG4gICAgYXN0LmNyZWF0ZU1hY3JvXG4gICAgICAnI21hY3JvJ1xuICAgICAgJ2JpbmFyeUtleXdvcmQnXG4gICAgICAnTE9XJ1xuICAgICAge1xuICAgICAgICBleHBhbmQ6IChhc3QpIC0+XG4gICAgICAgICAgaWYgKCFhc3QuY291bnQgPT0gMikgZG9cbiAgICAgICAgICAgIGFzdC5lcnJvcignRXhwZWN0ZWQgYXJndW1lbnRzOiBuYW1lIGFuZCBwcm9wZXJ0aWVzJylcbiAgICAgICAgICAgIHJldHVybiBudWxsXG4gICAgICAgICAgdmFyIGFyZ3NUdXBsZSA9IChhc3QuYXQgMSkuYXNUdXBsZSgpXG4gICAgICAgICAgdmFyIGFyZ3MgPSBjb21wb3NlTWFjcm9Bcmd1bWVudHMoYXN0LmF0IDAsIGFyZ3NUdXBsZSlcbiAgICAgICAgICBpZiAoYXJncyAhPSBudWxsKSBkb1xuICAgICAgICAgICAgdmFyIHJlc3VsdCA9ICNxdW90ZSAoYXN0LmNyZWF0ZU1hY3JvKF9fYXJnMCwgX19hcmcxLCBfX2FyZzIsIF9fYXJnMykpXG4gICAgICAgICAgICByZXN1bHQucmVwbGFjZVRhZygnX19hcmcwJywgYXJnc1swXSlcbiAgICAgICAgICAgIHJlc3VsdC5yZXBsYWNlVGFnKCdfX2FyZzEnLCBhcmdzWzFdKVxuICAgICAgICAgICAgcmVzdWx0LnJlcGxhY2VUYWcoJ19fYXJnMicsIGFyZ3NbMl0pXG4gICAgICAgICAgICByZXN1bHQucmVwbGFjZVRhZygnX19hcmczJywgYXJnc1szXSlcbiAgICAgICAgICAgIHJlc3VsdFxuICAgICAgICAgIGVsc2VcbiAgICAgICAgICAgIG51bGxcbiAgICAgIH1cbiAgYXN0LmRlZmluZVN5bWJvbFxuICAgIGFzdC5jcmVhdGVNYWNyb1xuICAgICAgJyNkZWZtYWNybydcbiAgICAgICdiaW5hcnlLZXl3b3JkJ1xuICAgICAgJ0xPVydcbiAgICAgIHtcbiAgICAgICAgcG9zdENvbWJpbmU6IChhc3QpIC0+XG4gICAgICAgICAgaWYgKCFhc3QuY291bnQgPT0gMikgZG9cbiAgICAgICAgICAgIGFzdC5lcnJvcignRXhwZWN0ZWQgYXJndW1lbnRzOiBuYW1lIGFuZCBwcm9wZXJ0aWVzJylcbiAgICAgICAgICAgIHJldHVybiBudWxsXG4gICAgICAgICAgdmFyIGFyZ3NUdXBsZSA9IChhc3QuYXQgMSkuYXNUdXBsZSgpXG4gICAgICAgICAgdmFyIGFyZ3MgPSBjb21wb3NlTWFjcm9Bcmd1bWVudHMoYXN0LmF0IDAsIGFyZ3NUdXBsZSlcbiAgICAgICAgICBpZiAoYXJncyAhPSBudWxsKSBkb1xuICAgICAgICAgICAgdmFyIGRlZmluaXRpb24gPSAjcXVvdGUgKGFzdC5kZWZpbmVTeW1ib2woYXN0LmNyZWF0ZU1hY3JvKF9fYXJnMCwgX19hcmcxLCBfX2FyZzIsIF9fYXJnMykpLCBudWxsKVxuICAgICAgICAgICAgZGVmaW5pdGlvbi5yZXBsYWNlVGFnKCdfX2FyZzAnLCBhcmdzWzBdKVxuICAgICAgICAgICAgZGVmaW5pdGlvbi5yZXBsYWNlVGFnKCdfX2FyZzEnLCBhcmdzWzFdKVxuICAgICAgICAgICAgZGVmaW5pdGlvbi5yZXBsYWNlVGFnKCdfX2FyZzInLCBhcmdzWzJdKVxuICAgICAgICAgICAgZGVmaW5pdGlvbi5yZXBsYWNlVGFnKCdfX2FyZzMnLCBhcmdzWzNdKVxuICAgICAgICAgICAgYXN0Lm5ld01ldGEoYXN0Lm5ld0RvKGRlZmluaXRpb24pKVxuICAgICAgICAgIGVsc2VcbiAgICAgICAgICAgIG51bGxcbiAgICAgIH1cbiAgYXN0LmRlZmluZVN5bWJvbFxuICAgIGFzdC5jcmVhdGVNYWNyb1xuICAgICAgJyNrZWVwbWFjcm8nXG4gICAgICAnYmluYXJ5S2V5d29yZCdcbiAgICAgICdMT1cnXG4gICAgICB7XG4gICAgICAgIHBvc3RDb21iaW5lOiAoYXN0KSAtPlxuICAgICAgICAgIGlmICghYXN0LmNvdW50ID09IDIpIGRvXG4gICAgICAgICAgICBhc3QuZXJyb3IoJ0V4cGVjdGVkIGFyZ3VtZW50czogbmFtZSBhbmQgcHJvcGVydGllcycpXG4gICAgICAgICAgICByZXR1cm4gbnVsbFxuICAgICAgICAgIHZhciBhcmdzVHVwbGUgPSAoYXN0LmF0IDEpLmFzVHVwbGUoKVxuICAgICAgICAgIHZhciBhcmdzID0gY29tcG9zZU1hY3JvQXJndW1lbnRzKGFzdC5hdCAwLCBhcmdzVHVwbGUpXG4gICAgICAgICAgaWYgKGFyZ3MgIT0gbnVsbCkgZG9cbiAgICAgICAgICAgIHZhciBkZWZpbml0aW9uID0gI3F1b3RlIChhc3QuZGVmaW5lU3ltYm9sKGFzdC5jcmVhdGVNYWNybyhfX2FyZzAsIF9fYXJnMSwgX19hcmcyLCBfX2FyZzMpKSwgbnVsbClcbiAgICAgICAgICAgIGRlZmluaXRpb24ucmVwbGFjZVRhZygnX19hcmcwJywgYXJnc1swXSlcbiAgICAgICAgICAgIGRlZmluaXRpb24ucmVwbGFjZVRhZygnX19hcmcxJywgYXJnc1sxXSlcbiAgICAgICAgICAgIGRlZmluaXRpb24ucmVwbGFjZVRhZygnX19hcmcyJywgYXJnc1syXSlcbiAgICAgICAgICAgIGRlZmluaXRpb24ucmVwbGFjZVRhZygnX19hcmczJywgYXJnc1szXSlcbiAgICAgICAgICAgIHZhciByZXN1bHQgPSBhc3QubmV3TWV0YShhc3QubmV3RG8oZGVmaW5pdGlvbikpXG4gICAgICAgICAgICByZXN1bHQuc3ltID0gYXN0LmtleVNjb3BlLmdldCAnI2tlZXAtbWV0YSdcbiAgICAgICAgICAgIHJlc3VsdFxuICAgICAgICAgIGVsc2VcbiAgICAgICAgICAgIG51bGxcbiAgICAgIH1cblxuICA7IFRyaWNrIHRvIGNvbXBpbGUgdGhlIGNvZGUgdHdpY2U6IGluIHRoaXMgY29tcGlsYXRpb24gY29udGV4dCBhbmQgZm9yIHRoZSBnZW5lcmF0ZWQgSlMuXG4gIDsgSXQgcmVtb3ZlcyB0aGlzIGxhc3Qgc3RhdGVtZW50IGZyb20gdGhlIGNvZGUgKHNvIHRoYXQgaXQgZG9lcyBub3QgYXBwZWFyIGluIHRoZSBnZW5lcmF0ZWRcbiAgOyBmaWxlKSBidXQgbWFrZXMgc28gdGhhdCB0aGUgdG9wIGxldmVsICNtZXRhIGtlZXBzIHRoZSBjb2RlIChieSByZXR1cm5pbmcgYXN0LmF0IDApLlxuICBkbyAoKGFzdC5hdCAwKS5wb3AoKSwgYXN0LmF0IDApXG5cbiNrZWVwbWFjcm8gJ35gJ1xuICB1bmFyeVxuICBleHBhbmQ6ICgpIC0+ICgpXG5cbiNrZWVwbWFjcm8gJ2AnXG4gIHVuYXJ5XG4gIExPV1xuICBkb05vdEV4cGFuZENoaWxkcmVuOiB0cnVlXG4gIGV4cGFuZDogKGNvZGUpIC0+XG4gICAgdmFyIHJlc3VsdCA9ICNxdW90ZSBkb1xuICAgICAgdmFyIFxcY29kZVRhZyA9ICNxdW90ZSBjb2RlXG4gICAgICB0YWdSZXBsYWNlbWVudHNcbiAgICAgIFxcY29kZVRhZ1xuICAgIHZhciB0YWdSZXBsYWNlbWVudHMgPSBbXVxuICAgIHZhciB1bnF1b3RlSW5kZXggPSAxXG4gICAgY29kZS5mb3JFYWNoUmVjdXJzaXZlXG4gICAgICAoY2hpbGQpIC0+IGRvXG4gICAgICAgIGlmIChjaGlsZC5pZCA9PSAnfmAnKVxuICAgICAgICAgIHZhclxuICAgICAgICAgICAgcmVwbGFjZW1lbnQgPSBjaGlsZC5hdCAwXG4gICAgICAgICAgICByZXBsYWNlbWVudE5hbWUgPSAndW5xdW90ZScgKyB1bnF1b3RlSW5kZXg7XG4gICAgICAgICAgICByZXBsYWNlbWVudE5hbWVWYWwgPSBjaGlsZC5uZXdWYWx1ZSByZXBsYWNlbWVudE5hbWVcbiAgICAgICAgICAgIHJlcGxhY2VtZW50TmFtZVRhZyA9IGNoaWxkLm5ld1RhZyByZXBsYWNlbWVudE5hbWVcbiAgICAgICAgICAgIHRhZ1JlcGxhY2VtZW50ID0gI3F1b3RlICgoXFxjb2RlVGFnKS5yZXBsYWNlVGFnKHF1b3RlZFRhZ05hbWUsIHJlcGxhY2VtZW50KSlcbiAgICAgICAgICBjaGlsZC5yZXBsYWNlV2l0aCByZXBsYWNlbWVudE5hbWVUYWdcbiAgICAgICAgICB0YWdSZXBsYWNlbWVudC5yZXBsYWNlVGFnKCdxdW90ZWRUYWdOYW1lJywgcmVwbGFjZW1lbnROYW1lVmFsKVxuICAgICAgICAgIHRhZ1JlcGxhY2VtZW50LnJlcGxhY2VUYWcoJ3JlcGxhY2VtZW50JywgcmVwbGFjZW1lbnQpXG4gICAgICAgICAgdGFnUmVwbGFjZW1lbnRzLnB1c2ggdGFnUmVwbGFjZW1lbnRcbiAgICAgICAgICB1bnF1b3RlSW5kZXggKz0gMVxuICAgICAgICAoKVxuICAgIHJlc3VsdC5yZXBsYWNlVGFnKCdjb2RlJywgY29kZSlcbiAgICByZXN1bHQucmVwbGFjZVRhZygndGFnUmVwbGFjZW1lbnRzJywgdGFnUmVwbGFjZW1lbnRzKVxuICAgIHJlc3VsdC5yZXNvbHZlVmlydHVhbCgpXG4gICAgcmVzdWx0XG5cbiNrZWVwbWFjcm8gJ2RvISdcbiAgdW5hcnlcbiAgTE9XXG4gIGV4cGFuZDogKGJvZHkpIC0+XG4gICAgdmFyIHN0YXRlbWVudHMgPSBib2R5LmNvcHkoKS5hc1R1cGxlKClcbiAgICB2YXIgcmVzdWx0ID0gYFxuICAgICAgZG9cbiAgICAgICAgfmAgc3RhdGVtZW50cy5tYXAoYXJnIC0+IGFyZylcbiAgICAgICAgdW5kZWZpbmVkXG4gICAgcmVzdWx0XG5cbiNrZWVwbWFjcm8gJyNtZXRhbW9kdWxlJ1xuICB1bmFyeVxuICBMT1dcbiAgZXhwYW5kOiAoYm9keSkgLT5cbiAgICBgXG4gICAgICAjZXh0ZXJuYWwgbW9kdWxlXG4gICAgICBtb2R1bGUuZXhwb3J0cyA9IChhc3QpIC0+XG4gICAgICAgIGRvXG4gICAgICAgICAgZG9cbiAgICAgICAgICAgIH5gIGJvZHlcbiAgICAgICAgICBudWxsXG5cbiNrZWVwbWFjcm8gI21ldGFpbXBvcnRcbiAgYXJpdHk6IHVuYXJ5XG4gIHByZWNlZGVuY2U6IExPV1xuICBwb3N0Q29tYmluZTogbW9kdWxlTmFtZXMgLT5cbiAgICB2YXIgbW9kdWxlU3RyaW5ncyA9IG1vZHVsZU5hbWVzLmFzVHVwbGUoKS5tYXBcbiAgICAgIG1vZHVsZU5hbWUgLT5cbiAgICAgICAgdmFyIG1vZHVsZVN0cmluZyA9IG1vZHVsZU5hbWUuZ2V0U2ltcGxlVmFsdWUoKVxuICAgICAgICBpZiAodHlwZW9mIG1vZHVsZVN0cmluZyAhPSAnc3RyaW5nJykgZG9cbiAgICAgICAgICBtb2R1bGVOYW1lLmVycm9yICdJbnZhbGlkIG1vZHVsZSBuYW1lJ1xuICAgICAgICAgIG1vZHVsZU5hbWVcbiAgICAgICAgZWxzZVxuICAgICAgICAgIG1vZHVsZU5hbWUubmV3VmFsdWUgbW9kdWxlU3RyaW5nXG4gICAgbW9kdWxlTmFtZXMubmV3TWV0YVxuICAgICAgYFxuICAgICAgICB0cnlcbiAgICAgICAgICB2YXIgbWV0YVJlcXVpcmUgPSAocmVxdWlyZSAncmVxdWlyZS1saWtlJykoYXN0LmNvbXBpbGVyLnBhcnNlci5zb3VyY2UpXG4gICAgICAgICAgW35gbW9kdWxlU3RyaW5nc10uZm9yRWFjaFxuICAgICAgICAgICAgbSAtPiAobWV0YVJlcXVpcmUgbSkgKGFzdClcbiAgICAgICAgY2F0Y2ggKHZhciBlKVxuICAgICAgICAgIGFzdC5lcnJvcignRXJyb3IgaW1wb3J0aW5nIG1vZHVsZTogJyArIGUudG9TdHJpbmcoKSlcbiAgICAgICAgbnVsbFxuXG4ja2VlcG1hY3JvIHdoaWxlXG4gIGFyaXR5OiBiaW5hcnlLZXl3b3JkXG4gIHByZWNlZGVuY2U6IExPV1xuICBleHBhbmQ6IChjb25kaXRpb24sIGJvZHkpIC0+XG4gICAgYCBsb29wICgpXG4gICAgICBpZiAofmAgY29uZGl0aW9uKSBkb1xuICAgICAgICBkb1xuICAgICAgICAgIH5gIGJvZHlcbiAgICAgICAgbmV4dCEgKClcblxuI2tlZXBtYWNybyAuLT5cbiAgYXJpdHk6IGJpbmFyeVxuICBwcmVjZWRlbmNlOiBNRU1CRVJcbiAgZXhwYW5kOiAoc3RhcnQsIGZvbGxvd2luZykgLT5cbiAgICB2YXJcbiAgICAgIGN1cnJlbnQgPSBzdGFydFxuICAgICAgb3RoZXJzID0gZm9sbG93aW5nLmFzVHVwbGUoKVxuICAgICAgZ2V0LWxlZnRtb3N0ID0gKHJvb3QpIC0+XG4gICAgICAgIHdoaWxlIChyb290LmlzQ2FsbCgpIHx8IHJvb3QuaXNNZW1iZXIoKSlcbiAgICAgICAgICByb290ID0gcm9vdC5hdCAwXG4gICAgICAgIHJvb3RcbiAgICB3aGlsZSAob3RoZXJzLmNvdW50ID4gMClcbiAgICAgIHZhclxuICAgICAgICBvdGhlciA9IG90aGVycy5zaGlmdCgpXG4gICAgICAgIG90aGVyLWxlZnRtb3N0ID0gZ2V0LWxlZnRtb3N0IG90aGVyXG4gICAgICBjdXJyZW50ID1cbiAgICAgICAgaWYgKG90aGVyLWxlZnRtb3N0LnBhcmVudCA9PSBudWxsKVxuICAgICAgICAgIGAgKH5gY3VycmVudCkuKH5gb3RoZXItbGVmdG1vc3QpXG4gICAgICAgIGVsc2UgZG9cbiAgICAgICAgICB2YXIgb3RoZXItcGFyZW50ID0gb3RoZXItbGVmdG1vc3QucGFyZW50XG4gICAgICAgICAgb3RoZXItcGFyZW50LnNoaWZ0KClcbiAgICAgICAgICBvdGhlci1wYXJlbnQudW5zaGlmdChgICh+YGN1cnJlbnQpLih+YG90aGVyLWxlZnRtb3N0KSlcbiAgICAgICAgICBvdGhlclxuICAgIGN1cnJlbnRcblxuI2tlZXBtYWNybyA8LVxuICBhcml0eTogYmluYXJ5XG4gIHByZWNlZGVuY2U6IE1FRElVTVxuICBleHBhbmQ6IChjYWxsZWUsIGFyZ3MpIC0+XG4gICAgYCAofmBjYWxsZWUpKH5gYXJncylcblxuJycnXG4ja2VlcG1hY3JvIEBcbiAgdW5hcnlcbiAgSElHSFxuICBleHBhbmQ6IG1lbWJlciAtPlxuICAgIGlmIChtZW1iZXIudGFnPygpKVxuICAgICAgYHRoaXMuIH5gbWVtYmVyXG4gICAgZWxzZSBpZiAobWVtYmVyLmFycmF5PygpKVxuICAgICAgaWYgKG1lbWJlci5jb3VudCA9PSAwKVxuICAgICAgICBgdGhpc1xuICAgICAgZWxzZSBpZiAobWVtYmVyLmNvdW50ID09IDEpXG4gICAgICAgIGB0aGlzW35gbWVtYmVyXVxuICAgICAgZWxzZSBkb1xuICAgICAgICBtZW1iZXIuZXJyb3IgJ01lbWJlciBvcGVyYXRvciBhY2NlcHRzIG9ubHkgb25lIG9wZXJhbmQnXG4gICAgICAgIGB1bmRlZmluZWRcbiAgICBlbHNlXG4gICAgICBgdGhpc1t+YG1lbWJlcl1cbicnJ1xuXG4ja2VlcG1hY3JvICMtPlxuICB1bmFyeVxuICBMT1dcbiAgZXhwYW5kOiAoYm9keSkgLT5cbiAgICBpZiAodHlwZW9mIGJvZHkgPT0gJ3VuZGVmaW5lZCcgfHwgKGJvZHkuaXNQbGFjZWhvbGRlcigpICYmIGJvZHkuZ2V0U2ltcGxlVmFsdWUoKSA9PSBudWxsKSlcbiAgICAgIGJvZHkgPSBhc3QubmV3VGFnICd1bmRlZmluZWQnXG4gICAgdmFyIGFyZ3MgPSBhc3QubmV3VHVwbGUoKVxuICAgIHZhciBwcm9jZXNzLW5leHQgPSB0cnVlXG4gICAgbG9vcCAodmFyIG4gPSAxKVxuICAgICAgaWYgcHJvY2Vzcy1uZXh0XG4gICAgICAgIHByb2Nlc3MtbmV4dCA9IGZhbHNlXG4gICAgICAgIHZhclxuICAgICAgICAgIGN1cnJlbnQtaWQgPSAnIycgKyBuXG4gICAgICAgICAgY3VycmVudC1hcmctbmFtZSA9ICdfXyRhcmckJyArIG5cbiAgICAgICAgYm9keS5mb3JFYWNoUmVjdXJzaXZlXG4gICAgICAgICAgbm9kZSAtPiBkbyFcbiAgICAgICAgICAgIGlmIChub2RlLmlzUGxhY2Vob2xkZXIoKSAmJiAobm9kZS5nZXRTaW1wbGVWYWx1ZSgpID09IGN1cnJlbnQtaWQgfHwgKG4gPT0gMSAmJiBub2RlLmdldFNpbXBsZVZhbHVlKCkgPT0gJyNpdCcpKSlcbiAgICAgICAgICAgICAgaWYgKCFwcm9jZXNzLW5leHQpXG4gICAgICAgICAgICAgICAgcHJvY2Vzcy1uZXh0ID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICBhcmdzLnB1c2goKGFzdC5uZXdUYWcgY3VycmVudC1hcmctbmFtZSkuaGFuZGxlQXNGdW5jdGlvbkFyZ3VtZW50KCkpXG4gICAgICAgICAgICAgIG5vZGUucmVwbGFjZVdpdGgobm9kZS5uZXdUYWcgY3VycmVudC1hcmctbmFtZSlcbiAgICAgICAgbmV4dCEgbiArIDFcbiAgICBgKH5gIGFyZ3MpIC0+ICh+YCBib2R5KVxuXG5cbjsgRmF0IGFycm93LCBiaW5kcyBgdGhpc2AgdG8gdGhlIGZ1bmN0aW9uJ3MgbGV4aWNhbCBjb250ZXh0XG4ja2VlcG1hY3JvID0+XG4gIGFyaXR5OiBiaW5hcnlcbiAgcHJlY2VkZW5jZTogRlVOQ1RJT05cbiAgbGVmdC1wcmVjZWRlbmNlOiAnRlVOQ1RJT04tTEVGVCdcbiAgZXhwYW5kOiAobGhzLCByaHMpIC0+XG4gICAgdmFyIHRyYXZlcnNlciA9ICMtPiBkbyFcbiAgICAgIGlmICgjaXQuaXNUYWcoKSAmJiAjaXQuZ2V0VGFnKCkgPT0gJ3RoaXMnKVxuICAgICAgICAjaXQucmVwbGFjZVdpdGggYCBcXGNhcHR1cmVkLXRoaXNcbiAgICAgIGlmICghICNpdC5mdW5jdGlvbi1kZWZpbml0aW9uPygpKVxuICAgICAgICAjaXQuZm9yLWVhY2ggIy0+IHRyYXZlcnNlciAjaXRcbiAgICB0cmF2ZXJzZXIgcmhzXG4gICAgdmFyIHJlc3VsdCA9IGAgZG9cbiAgICAgIHZhciBcXGNhcHR1cmVkLXRoaXMgPSB0aGlzXG4gICAgICAofmAgbGhzKSAtPiAofmAgcmhzKVxuICAgIHJlc3VsdC5yZXNvbHZlVmlydHVhbCgpXG4gICAgcmVzdWx0XG5cbiNrZWVwbWFjcm8gI2pzXG4nJydcbiAgU2FtZSBhcyBldmFsIGJ1dCBmb3IgbGl0ZXJhbCB2YWx1ZXMgYWxsb3dzIHRvIGRpcmVjdGx5IGVtYmVkIGl0IGluIHRoZVxuICBnZW5lcmF0ZWQgamF2YXNjcmlwdCBjb2RlLlxuXG4gIFVzYWdlOiBqcydiYXIgPyAxIDogLTEnXG4nJydcbiAgdW5hcnlcbiAgSElHSFxuICBleHBhbmQ6IChleHByKSAtPlxuICAgIHZhciBjb2RlID0gYCAoI2V4dGVybmFsIGV2YWwpKCB+YChleHByKSApXG4gICAgaWYgKGV4cHIudmFsdWU/KCkpXG4gICAgICBjb2RlLnNldCgnanMnLCBleHByLmdldC12YWx1ZSgpKVxuICAgIGNvZGVcblxuI2tlZXBtYWNybyAjbm8tbmV3LXNjb3BlXG4gIHVuYXJ5XG4gIExPV1xuICBleHBhbmQ6IChleHByKSAtPlxuICAgIGV4cHIuc2V0KCduby1uZXctc2NvcGUnLCB0cnVlKVxuICAgIGV4cHJcblxuXG5udWxsXG4pXG5cbiJdfQ==