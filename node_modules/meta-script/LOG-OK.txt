 +++ jsCode: __$result__function$__ = function (ast) {
    var _$0;
    _$1: {
        ast.defineSymbol(ast.createMacro('describe', 'binaryKeyword', 'KEY', {
            'expand': function (ast) {
                var body, item, _$2, _$4, codeTag0;
                _$3: {
                    body = ast.at(1);
                    item = ast.at(0);
                    _$5: {
                        codeTag0 = ast.fromJsonString('{"id":"<call>","kind":"builtin","val":null,"loc":{"source":"test/meta-test.mjs","start":{"line":12,"column":6},"end":{"line":15,"column":0}},"args":[{"id":"<tag>","kind":"tag","val":"describe","loc":{"source":"test/meta-test.mjs","start":{"line":11,"column":5},"end":{"line":11,"column":5}},"args":[]},{"id":"<tuple>","kind":"builtin","val":null,"loc":{"source":"test/meta-test.mjs","start":{"line":12,"column":6},"end":{"line":15,"column":0}},"args":[{"id":"<tag>","kind":"tag","val":"unquote1","loc":{"source":"test/meta-test.mjs","start":{"line":12,"column":6},"end":{"line":12,"column":6}},"args":[]},{"id":"->","kind":"builtin","val":"->","loc":{"source":"test/meta-test.mjs","start":{"line":13,"column":9},"end":{"line":13,"column":9}},"args":[{"id":"<tuple>","kind":"builtin","val":null,"loc":{"source":"test/meta-test.mjs","start":{"line":13,"column":6},"end":{"line":13,"column":7}},"args":[]},{"id":"<tag>","kind":"tag","val":"unquote2","loc":{"source":"test/meta-test.mjs","start":{"line":13,"column":12},"end":{"line":13,"column":12}},"args":[]}]}]}]}');
                        codeTag0.replaceTag('unquote1', item);
                        codeTag0.replaceTag('unquote2', body);
                        _$4 = codeTag0;
                        break _$5;
                    }
                    _$2 = _$4;
                    break _$3;
                }
                return _$2;
            }
        }));
        _$0 = null;
        break _$1;
    }
    return _$0;
};
 +++ jsCode: __$result__function$__ = function (ast) {
    var _$0;
    _$1: {
        ast.defineSymbol(ast.createMacro('it', 'binaryKeyword', 'KEY', {
            'expand': function (ast) {
                var body, item, _$2, _$4, codeTag0;
                _$3: {
                    body = ast.at(1);
                    item = ast.at(0);
                    _$5: {
                        codeTag0 = ast.fromJsonString('{"id":"<call>","kind":"builtin","val":null,"loc":{"source":"test/meta-test.mjs","start":{"line":20,"column":6},"end":{"line":23,"column":0}},"args":[{"id":"<tag>","kind":"tag","val":"it","loc":{"source":"test/meta-test.mjs","start":{"line":19,"column":5},"end":{"line":19,"column":5}},"args":[]},{"id":"<tuple>","kind":"builtin","val":null,"loc":{"source":"test/meta-test.mjs","start":{"line":20,"column":6},"end":{"line":23,"column":0}},"args":[{"id":"<tag>","kind":"tag","val":"unquote1","loc":{"source":"test/meta-test.mjs","start":{"line":20,"column":6},"end":{"line":20,"column":6}},"args":[]},{"id":"->","kind":"builtin","val":"->","loc":{"source":"test/meta-test.mjs","start":{"line":21,"column":9},"end":{"line":21,"column":9}},"args":[{"id":"<tuple>","kind":"builtin","val":null,"loc":{"source":"test/meta-test.mjs","start":{"line":21,"column":6},"end":{"line":21,"column":7}},"args":[]},{"id":"<tag>","kind":"tag","val":"unquote2","loc":{"source":"test/meta-test.mjs","start":{"line":21,"column":12},"end":{"line":21,"column":12}},"args":[]}]}]}]}');
                        codeTag0.replaceTag('unquote1', item);
                        codeTag0.replaceTag('unquote2', body);
                        _$4 = codeTag0;
                        break _$5;
                    }
                    _$2 = _$4;
                    break _$3;
                }
                return _$2;
            }
        }));
        _$0 = null;
        break _$1;
    }
    return _$0;
};
 +++ jsCode: __$result__function$__ = function (ast) {
    var _$0;
    _$1: {
        ast.defineSymbol(ast.createMacro('moo', 'unary', 'KEY', {
            'expand': function (ast) {
                var arg, code, _$2;
                _$3: {
                    arg = ast.at(0);
                    code = ast.fromJsonString('{"id":"+","kind":"builtin","val":"+","loc":{"source":"test/meta-test.mjs","start":{"line":145,"column":24},"end":{"line":145,"column":39}},"args":[{"id":"<value>","kind":"value","val":"moo ","loc":{"source":"test/meta-test.mjs","start":{"line":145,"column":25},"end":{"line":145,"column":30}},"args":[]},{"id":"<tag>","kind":"tag","val":"arg","loc":{"source":"test/meta-test.mjs","start":{"line":145,"column":34},"end":{"line":145,"column":38}},"args":[]}]}');
                    code.replaceTag('arg', arg);
                    _$2 = code;
                    break _$3;
                }
                return _$2;
            }
        }));
        _$0 = null;
        break _$1;
    }
    return _$0;
};
 +++ jsCode: __$result__function$__ = function (ast) {
    var _$0;
    _$1: {
        ast.defineSymbol(ast.createMacro('@@@', 'unary', 'HIGH', {
            'expand': function (ast) {
                var member, code, _$2;
                _$3: {
                    member = ast.at(0);
                    code = ast.fromJsonString('{"id":".","kind":"builtin","val":".","loc":{"source":"test/meta-test.mjs","start":{"line":159,"column":28},"end":{"line":159,"column":28}},"args":[{"id":"<tag>","kind":"tag","val":"this","loc":{"source":"test/meta-test.mjs","start":{"line":159,"column":24},"end":{"line":159,"column":24}},"args":[]},{"id":"<name>","kind":"tag","val":"arg","loc":{"source":"test/meta-test.mjs","start":{"line":159,"column":29},"end":{"line":159,"column":29}},"args":[]}]}');
                    code.replaceTag('arg', member);
                    _$2 = code;
                    break _$3;
                }
                return _$2;
            }
        }));
        _$0 = null;
        break _$1;
    }
    return _$0;
};
 +++ jsCode: __$result__function$__ = function (ast) {
    var _$0;
    _$1: {
        ast.defineSymbol(ast.createMacro('@', 'unary', 'HIGH', {
            'expand': function (ast) {
                var member, code, _$2, _$4;
                _$3: {
                    member = ast.at(0);
                    if (member.isTag()) {
                        _$4 = ast.fromJsonString('{"id":".","kind":"builtin","val":".","loc":{"source":"test/meta-test.mjs","start":{"line":176,"column":21},"end":{"line":176,"column":21}},"args":[{"id":"<tag>","kind":"tag","val":"this","loc":{"source":"test/meta-test.mjs","start":{"line":176,"column":17},"end":{"line":176,"column":17}},"args":[]},{"id":"<name>","kind":"tag","val":"member","loc":{"source":"test/meta-test.mjs","start":{"line":176,"column":22},"end":{"line":176,"column":22}},"args":[]}]}');
                    } else {
                        _$4 = ast.fromJsonString('{"id":"<element>","kind":"builtin","val":null,"loc":{"source":"test/meta-test.mjs","start":{"line":178,"column":21},"end":{"line":178,"column":28}},"args":[{"id":"<tag>","kind":"tag","val":"this","loc":{"source":"test/meta-test.mjs","start":{"line":178,"column":17},"end":{"line":178,"column":17}},"args":[]},{"id":"<tag>","kind":"tag","val":"member","loc":{"source":"test/meta-test.mjs","start":{"line":178,"column":21},"end":{"line":178,"column":28}},"args":[]}]}');
                    }
                    code = _$4;
                    code.replaceTag('member', member);
                    _$2 = code;
                    break _$3;
                }
                return _$2;
            }
        }));
        _$0 = null;
        break _$1;
    }
    return _$0;
};
 +++ jsCode: __$result__function$__ = function (ast) {
    var _$0;
    _$1: {
        ast.defineSymbol(ast.createMacro('vTagTest', 'unary', 'KEY', {
            'expand': function (ast) {
                var count, code, _$2;
                _$3: {
                    count = ast.at(0);
                    code = ast.fromJsonString('{"id":"<do>","kind":"builtin","val":null,"loc":{"source":"test/meta-test.mjs","start":{"line":196,"column":24},"end":{"line":203,"column":6}},"args":[{"id":"=","kind":"builtin","val":"=","loc":{"source":"test/meta-test.mjs","start":{"line":197,"column":20},"end":{"line":197,"column":20}},"args":[{"id":"<vTagDeclaration>","kind":"tag","val":"result","loc":{"source":"test/meta-test.mjs","start":{"line":197,"column":8},"end":{"line":197,"column":13}},"args":[]},{"id":"<array>","kind":"builtin","val":null,"loc":{"source":"test/meta-test.mjs","start":{"line":197,"column":22},"end":{"line":197,"column":23}},"args":[]}]},{"id":"loop","kind":"builtin","val":"loop","loc":{"source":"test/meta-test.mjs","start":{"line":198,"column":8},"end":{"line":198,"column":8}},"args":[{"id":"=","kind":"builtin","val":"=","loc":{"source":"test/meta-test.mjs","start":{"line":198,"column":13},"end":{"line":198,"column":24}},"args":[{"id":"<vTagDeclaration>","kind":"tag","val":"i","loc":{"source":"test/meta-test.mjs","start":{"line":198,"column":14},"end":{"line":198,"column":19}},"args":[]},{"id":"<value>","kind":"value","val":0,"loc":{"source":"test/meta-test.mjs","start":{"line":198,"column":23},"end":{"line":198,"column":23}},"args":[]}]},{"id":"if","kind":"builtin","val":"if","loc":{"source":"test/meta-test.mjs","start":{"line":199,"column":10},"end":{"line":203,"column":6}},"args":[{"id":"<","kind":"builtin","val":"<","loc":{"source":"test/meta-test.mjs","start":{"line":199,"column":13},"end":{"line":199,"column":24}},"args":[{"id":"<vTag>","kind":"tag","val":"i","loc":{"source":"test/meta-test.mjs","start":{"line":199,"column":14},"end":{"line":199,"column":15}},"args":[]},{"id":"<tag>","kind":"tag","val":"count","loc":{"source":"test/meta-test.mjs","start":{"line":199,"column":19},"end":{"line":199,"column":19}},"args":[]}]},{"id":"<tuple>","kind":"builtin","val":null,"loc":{"source":"test/meta-test.mjs","start":{"line":200,"column":12},"end":{"line":202,"column":10}},"args":[{"id":"<call>","kind":"builtin","val":null,"loc":{"source":"test/meta-test.mjs","start":{"line":200,"column":24},"end":{"line":200,"column":27}},"args":[{"id":".","kind":"builtin","val":".","loc":{"source":"test/meta-test.mjs","start":{"line":200,"column":19},"end":{"line":200,"column":19}},"args":[{"id":"<vTag>","kind":"tag","val":"result","loc":{"source":"test/meta-test.mjs","start":{"line":200,"column":12},"end":{"line":200,"column":13}},"args":[]},{"id":"<name>","kind":"tag","val":"push","loc":{"source":"test/meta-test.mjs","start":{"line":200,"column":20},"end":{"line":200,"column":20}},"args":[]}]},{"id":"<vTag>","kind":"tag","val":"i","loc":{"source":"test/meta-test.mjs","start":{"line":200,"column":24},"end":{"line":200,"column":27}},"args":[]}]},{"id":"next","kind":"builtin","val":"next","loc":{"source":"test/meta-test.mjs","start":{"line":201,"column":12},"end":{"line":201,"column":12}},"args":[{"id":"+","kind":"builtin","val":"+","loc":{"source":"test/meta-test.mjs","start":{"line":201,"column":17},"end":{"line":201,"column":24}},"args":[{"id":"<vTag>","kind":"tag","val":"i","loc":{"source":"test/meta-test.mjs","start":{"line":201,"column":18},"end":{"line":201,"column":19}},"args":[]},{"id":"<value>","kind":"value","val":1,"loc":{"source":"test/meta-test.mjs","start":{"line":201,"column":23},"end":{"line":201,"column":23}},"args":[]}]}]}]},{"id":"<vTag>","kind":"tag","val":"result","loc":{"source":"test/meta-test.mjs","start":{"line":202,"column":15},"end":{"line":202,"column":16}},"args":[]}]}]}]}');
                    code.replaceTag('count', count);
                    code.resolveVirtual();
                    _$2 = code;
                    break _$3;
                }
                return _$2;
            }
        }));
        _$0 = null;
        break _$1;
    }
    return _$0;
};
 +++ jsCode: __$result__function$__ = function (ast) {
    var _$0;
    _$1: {
        ast.defineSymbol(ast.createMacro('addTwice', 'binary', 'LOW', {
            'expand': function (ast) {
                var right, left, code, result, _$2;
                _$3: {
                    right = ast.at(1);
                    left = ast.at(0);
                    code = ast.fromJsonString('{"id":"+=","kind":"builtin","val":"+=","loc":{"source":"test/meta-test.mjs","start":{"line":286,"column":24},"end":{"line":286,"column":38}},"args":[{"id":"<tag>","kind":"tag","val":"left","loc":{"source":"test/meta-test.mjs","start":{"line":286,"column":25},"end":{"line":286,"column":25}},"args":[]},{"id":"<tag>","kind":"tag","val":"right","loc":{"source":"test/meta-test.mjs","start":{"line":286,"column":33},"end":{"line":286,"column":33}},"args":[]}]}');
                    code.replaceTag('left', left);
                    code.replaceTag('right', right);
                    result = ast.fromJsonString('{"id":"<do>","kind":"builtin","val":null,"loc":{"source":"test/meta-test.mjs","start":{"line":289,"column":26},"end":{"line":289,"column":34}},"args":[{"id":"<tag>","kind":"tag","val":"code","loc":{"source":"test/meta-test.mjs","start":{"line":289,"column":30},"end":{"line":289,"column":30}},"args":[]}]}');
                    result.replaceTag('code', [
                        code,
                        code
                    ]);
                    _$2 = result;
                    break _$3;
                }
                return _$2;
            }
        }));
        _$0 = null;
        break _$1;
    }
    return _$0;
};
 +++ jsCode: __$result__function$__ = function (ast) {
    var _$0;
    _$1: {
        ast.defineSymbol(ast.createMacro('when', 'binaryKeyword', 'LOW', {
            'expand': function (ast) {
                return undefined;
            }
        }));
        _$0 = null;
        break _$1;
    }
    return _$0;
};
 +++ jsCode: __$result__function$__ = function (ast) {
    var _$0;
    _$1: {
        ast.defineSymbol(ast.createMacro('then', 'unary', 'LOW', {
            'expand': function (ast) {
                return undefined;
            }
        }));
        _$0 = null;
        break _$1;
    }
    return _$0;
};
 +++ jsCode: __$result__function$__ = function (ast) {
    var _$0;
    _$1: {
        ast.defineSymbol(ast.createMacro('async', 'optional', 'KEY', {
            'expand': function (ast) {
                return undefined;
            }
        }));
        _$0 = null;
        break _$1;
    }
    return _$0;
};
 +++ jsCode: __$result__function$__ = function (ast) {
    var _$0;
    _$1: {
        ast.defineSymbol(ast.createMacro('now', 'unary', 'LOW', {
            'dependent': [
                'when',
                'then'
            ],
            'expand': function (ast) {
                var declarations, callbacksTagMap, callbacksCodeMap, thenCallbackTag, thenCallbackCode, body, i, arg, whenTag, whenTagName, whenTagCode, declaration, thenDclaration, processAsync, result, _$2, _$6, codeTag0, _$4;
                _$3: {
                    declarations = [];
                    callbacksTagMap = new Object(null);
                    callbacksCodeMap = new Object(null);
                    thenCallbackTag = null;
                    thenCallbackCode = null;
                    body = ast.at(0);
                    console.log(' *** now: IN ' + ast.printAst());
                    i = 0;
                    _$4:
                        while (true) {
                            {
                                if (i >= ast.count) {
                                    break _$4;
                                }
                                arg = ast.at(i);
                                if (arg.id === 'when') {
                                    _$5: {
                                        whenTag = arg.at(0);
                                        whenTagName = arg.at(0).getTag();
                                        whenTagCode = arg.at(1);
                                        if (callbacksTagMap[whenTagName]) {
                                            arg.error('Callback "' + whenTagName + '" already declared');
                                        }
                                        _$7: {
                                            codeTag0 = ast.fromJsonString('{"id":"=","kind":"builtin","val":"=","loc":{"source":"test/meta-test.mjs","start":{"line":333,"column":29},"end":{"line":333,"column":87}},"args":[{"id":"<tag>","kind":"tag","val":"unquote1","loc":{"source":"test/meta-test.mjs","start":{"line":333,"column":30},"end":{"line":333,"column":79}},"args":[]},{"id":"<tag>","kind":"tag","val":"null","loc":{"source":"test/meta-test.mjs","start":{"line":333,"column":83},"end":{"line":333,"column":83}},"args":[]}]}');
                                            codeTag0.replaceTag('unquote1', whenTag.copy().handleAsTagDeclaration());
                                            _$6 = codeTag0;
                                            break _$7;
                                        }
                                        declaration = _$6;
                                        declarations.push(declaration);
                                        callbacksTagMap[whenTagName] = whenTag;
                                        callbacksCodeMap[whenTagName] = whenTagCode;
                                        ast.remove(arg);
                                        i = i;
                                        continue;
                                    }
                                } else {
                                    if (arg.id === 'then') {
                                        _$5: {
                                            if (thenCallbackTag !== null) {
                                                arg.error('Callback "then" already declared');
                                            } else {
                                                _$6: {
                                                    thenCallbackTag = ast.fromJsonString('{"id":"<vTag>","kind":"tag","val":"thenCallback","loc":{"source":"test/meta-test.mjs","start":{"line":343,"column":37},"end":{"line":343,"column":38}},"args":[]}');
                                                    thenCallbackCode = arg.at(0);
                                                    thenDclaration = ast.fromJsonString('{"id":"=","kind":"builtin","val":"=","loc":{"source":"test/meta-test.mjs","start":{"line":345,"column":40},"end":{"line":345,"column":65}},"args":[{"id":"<vTagDeclaration>","kind":"tag","val":"thenCallback","loc":{"source":"test/meta-test.mjs","start":{"line":345,"column":41},"end":{"line":345,"column":46}},"args":[]},{"id":"<tag>","kind":"tag","val":"null","loc":{"source":"test/meta-test.mjs","start":{"line":345,"column":61},"end":{"line":345,"column":61}},"args":[]}]}');
                                                    declarations.push(thenDclaration);
                                                }
                                            }
                                            ast.remove(arg);
                                            i = i;
                                            continue;
                                        }
                                    } else {
                                        i = i + 1;
                                        continue;
                                    }
                                }
                            }
                            break _$4;
                        }
                    processAsync = function (e) {
                        var tExp, wName, wExp, _$4, _$7, codeTag0;
                        _$5: {
                            if (e.id === 'async') {
                                if (e.count === 0) {
                                    _$6: {
                                        if (thenCallbackTag !== null) {
                                            _$8: {
                                                codeTag0 = ast.fromJsonString('{"id":"=","kind":"builtin","val":"=","loc":{"source":"test/meta-test.mjs","start":{"line":356,"column":17},"end":{"line":356,"column":52}},"args":[{"id":"<vTag>","kind":"tag","val":"thenCallback","loc":{"source":"test/meta-test.mjs","start":{"line":356,"column":18},"end":{"line":356,"column":19}},"args":[]},{"id":"<tag>","kind":"tag","val":"unquote1","loc":{"source":"test/meta-test.mjs","start":{"line":356,"column":34},"end":{"line":356,"column":34}},"args":[]}]}');
                                                codeTag0.replaceTag('unquote1', thenCallbackCode);
                                                _$7 = codeTag0;
                                                break _$8;
                                            }
                                        } else {
                                            _$8: {
                                                e.error('Callback "then" not declared');
                                                _$7 = ast.fromJsonString('{"id":"<tag>","kind":"tag","val":"null","loc":{"source":"test/meta-test.mjs","start":{"line":359,"column":28},"end":{"line":359,"column":28}},"args":[]}');
                                                break _$8;
                                            }
                                        }
                                        tExp = _$7;
                                        tExp.forEachRecursive(processAsync);
                                        e.replaceWith(tExp);
                                    }
                                } else {
                                    _$6: {
                                        wName = e.at(0).getTag();
                                        if (callbacksTagMap[wName]) {
                                            _$8: {
                                                codeTag0 = ast.fromJsonString('{"id":"=","kind":"builtin","val":"=","loc":{"source":"test/meta-test.mjs","start":{"line":366,"column":17},"end":{"line":366,"column":74}},"args":[{"id":"<tag>","kind":"tag","val":"unquote1","loc":{"source":"test/meta-test.mjs","start":{"line":366,"column":18},"end":{"line":366,"column":43}},"args":[]},{"id":"<tag>","kind":"tag","val":"unquote2","loc":{"source":"test/meta-test.mjs","start":{"line":366,"column":47},"end":{"line":366,"column":73}},"args":[]}]}');
                                                codeTag0.replaceTag('unquote1', callbacksTagMap[wName]);
                                                codeTag0.replaceTag('unquote2', callbacksCodeMap[wName]);
                                                _$7 = codeTag0;
                                                break _$8;
                                            }
                                        } else {
                                            _$8: {
                                                e.error('Callback "' + wName + '" not declared');
                                                _$7 = ast.fromJsonString('{"id":"<tag>","kind":"tag","val":"null","loc":{"source":"test/meta-test.mjs","start":{"line":369,"column":28},"end":{"line":369,"column":28}},"args":[]}');
                                                break _$8;
                                            }
                                        }
                                        wExp = _$7;
                                        wExp.forEachRecursive(processAsync);
                                        e.replaceWith(wExp);
                                    }
                                }
                            }
                            _$4 = undefined;
                            break _$5;
                        }
                        return _$4;
                    };
                    body.forEachRecursive(processAsync);
                    _$5: {
                        codeTag0 = ast.fromJsonString('{"id":"<do>","kind":"builtin","val":null,"loc":{"source":"test/meta-test.mjs","start":{"line":373,"column":20},"end":{"line":377,"column":6}},"args":[{"id":"<tag>","kind":"tag","val":"unquote1","loc":{"source":"test/meta-test.mjs","start":{"line":374,"column":8},"end":{"line":374,"column":8}},"args":[]},{"id":"<do>","kind":"builtin","val":null,"loc":{"source":"test/meta-test.mjs","start":{"line":375,"column":8},"end":{"line":377,"column":16}},"args":[{"id":"<tag>","kind":"tag","val":"unquote2","loc":{"source":"test/meta-test.mjs","start":{"line":376,"column":10},"end":{"line":377,"column":6}},"args":[]}]}]}');
                        codeTag0.replaceTag('unquote1', declarations);
                        codeTag0.replaceTag('unquote2', body);
                        _$4 = codeTag0;
                        break _$5;
                    }
                    result = _$4;
                    result.resolveVirtual();
                    console.log(' *** now: OUT');
                    _$2 = result;
                    break _$3;
                }
                return _$2;
            }
        }));
        _$0 = null;
        break _$1;
    }
    return _$0;
};
 +++ jsCode: __$result__function$__ = function (ast) {
    var _$0;
    _$1: {
        ast.defineSymbol(ast.createMacro('@@@', 'unary', 'HIGH', {
            'expand': function (ast) {
                var member, _$2, _$4, codeTag0;
                _$3: {
                    member = ast.at(0);
                    _$5: {
                        codeTag0 = ast.fromJsonString('{"id":".","kind":"builtin","val":".","loc":{"source":"test/meta-test.mjs","start":{"line":429,"column":11},"end":{"line":429,"column":11}},"args":[{"id":"<tag>","kind":"tag","val":"this","loc":{"source":"test/meta-test.mjs","start":{"line":429,"column":7},"end":{"line":429,"column":7}},"args":[]},{"id":"<tag>","kind":"tag","val":"unquote1","loc":{"source":"test/meta-test.mjs","start":{"line":429,"column":13},"end":{"line":429,"column":13}},"args":[]}]}');
                        codeTag0.replaceTag('unquote1', member);
                        _$4 = codeTag0;
                        break _$5;
                    }
                    _$2 = _$4;
                    break _$3;
                }
                return _$2;
            }
        }));
        _$0 = null;
        break _$1;
    }
    return _$0;
};
 +++ jsCode: __$result__function$__ = function (ast) {
    var _$0;
    _$1: {
        ast.defineSymbol(ast.createMacro('@', 'unary', 'HIGH', {
            'expand': function (ast) {
                var member, _$2, _$4, codeTag0;
                _$3: {
                    member = ast.at(0);
                    if (member.isTag()) {
                        _$5: {
                            codeTag0 = ast.fromJsonString('{"id":".","kind":"builtin","val":".","loc":{"source":"test/meta-test.mjs","start":{"line":443,"column":13},"end":{"line":443,"column":13}},"args":[{"id":"<tag>","kind":"tag","val":"this","loc":{"source":"test/meta-test.mjs","start":{"line":443,"column":9},"end":{"line":443,"column":9}},"args":[]},{"id":"<tag>","kind":"tag","val":"unquote1","loc":{"source":"test/meta-test.mjs","start":{"line":443,"column":15},"end":{"line":443,"column":15}},"args":[]}]}');
                            codeTag0.replaceTag('unquote1', member);
                            _$4 = codeTag0;
                            break _$5;
                        }
                    } else {
                        _$5: {
                            codeTag0 = ast.fromJsonString('{"id":"<element>","kind":"builtin","val":null,"loc":{"source":"test/meta-test.mjs","start":{"line":445,"column":15},"end":{"line":445,"column":15}},"args":[{"id":"<tag>","kind":"tag","val":"this","loc":{"source":"test/meta-test.mjs","start":{"line":445,"column":10},"end":{"line":445,"column":10}},"args":[]},{"id":"<tag>","kind":"tag","val":"unquote1","loc":{"source":"test/meta-test.mjs","start":{"line":445,"column":15},"end":{"line":445,"column":15}},"args":[]}]}');
                            codeTag0.replaceTag('unquote1', member);
                            _$4 = codeTag0;
                            break _$5;
                        }
                    }
                    _$2 = _$4;
                    break _$3;
                }
                return _$2;
            }
        }));
        _$0 = null;
        break _$1;
    }
    return _$0;
};
 +++ jsCode: __$result__function$__ = function (ast) {
    var _$0;
    _$1: {
        ast.defineSymbol(ast.createMacro('yield', 'unary', 'LOW', {
            'expand': function (ast) {
                return undefined;
            }
        }));
        _$0 = null;
        break _$1;
    }
    return _$0;
};
 +++ jsCode: __$result__function$__ = function (ast) {
    var _$0;
    _$1: {
        ast.defineSymbol(ast.createMacro('foreach', 'ternaryKeyword', 'LOW', {
            'expand': function (ast) {
                var body, yielder, declaration, assignable, yieldCount, _$2, _$4, codeTag0;
                _$3: {
                    body = ast.at(2);
                    yielder = ast.at(1);
                    declaration = ast.at(0);
                    assignable = declaration.getAssignable().copy().handleAsTagUse();
                    yieldCount = 0;
                    yielder.forEachRecursive(function (e) {
                        var _$4;
                        _$5: {
                            if (e.id === 'yield') {
                                yieldCount += 1;
                            }
                            _$4 = undefined;
                            break _$5;
                        }
                        return _$4;
                    });
                    if (yieldCount !== 1) {
                        _$4: {
                            yielder.error('Found ' + yieldCount + ' yield occurrences instead of 1');
                            return undefined;
                        }
                    }
                    yielder.forEachRecursive(function (e) {
                        var value, assignment, _$4, _$7, codeTag0;
                        _$5: {
                            if (e.id === 'yield') {
                                _$6: {
                                    value = e.at(0);
                                    _$8: {
                                        codeTag0 = ast.fromJsonString('{"id":"<do>","kind":"builtin","val":null,"loc":{"source":"test/meta-test.mjs","start":{"line":486,"column":28},"end":{"line":489,"column":10}},"args":[{"id":"=","kind":"builtin","val":"=","loc":{"source":"test/meta-test.mjs","start":{"line":487,"column":27},"end":{"line":487,"column":27}},"args":[{"id":"<tag>","kind":"tag","val":"unquote1","loc":{"source":"test/meta-test.mjs","start":{"line":487,"column":12},"end":{"line":487,"column":25}},"args":[]},{"id":"<tag>","kind":"tag","val":"unquote2","loc":{"source":"test/meta-test.mjs","start":{"line":487,"column":29},"end":{"line":487,"column":37}},"args":[]}]},{"id":"<tag>","kind":"tag","val":"unquote3","loc":{"source":"test/meta-test.mjs","start":{"line":488,"column":12},"end":{"line":488,"column":12}},"args":[]}]}');
                                        codeTag0.replaceTag('unquote1', assignable);
                                        codeTag0.replaceTag('unquote2', value);
                                        codeTag0.replaceTag('unquote3', body);
                                        _$7 = codeTag0;
                                        break _$8;
                                    }
                                    assignment = _$7;
                                    e.replaceWith(assignment);
                                }
                            }
                            _$4 = undefined;
                            break _$5;
                        }
                        return _$4;
                    });
                    _$5: {
                        codeTag0 = ast.fromJsonString('{"id":"<do>","kind":"builtin","val":null,"loc":{"source":"test/meta-test.mjs","start":{"line":490,"column":5},"end":{"line":494,"column":0}},"args":[{"id":"<tag>","kind":"tag","val":"unquote1","loc":{"source":"test/meta-test.mjs","start":{"line":491,"column":6},"end":{"line":491,"column":6}},"args":[]},{"id":"<tag>","kind":"tag","val":"unquote2","loc":{"source":"test/meta-test.mjs","start":{"line":492,"column":6},"end":{"line":492,"column":6}},"args":[]}]}');
                        codeTag0.replaceTag('unquote1', declaration);
                        codeTag0.replaceTag('unquote2', yielder);
                        _$4 = codeTag0;
                        break _$5;
                    }
                    _$2 = _$4;
                    break _$3;
                }
                return _$2;
            }
        }));
        _$0 = null;
        break _$1;
    }
    return _$0;
};
 +++ jsCode: __$result__function$__ = function (ast) {
    var _$0;
    _$1: {
        ast.defineSymbol(ast.createMacro('indexesOf', 'unary', 'LOW', {
            'expand': function (ast) {
                var array, result, _$2, _$4, codeTag0;
                _$3: {
                    array = ast.at(0);
                    _$5: {
                        codeTag0 = ast.fromJsonString('{"id":"loop","kind":"builtin","val":"loop","loc":{"source":"test/meta-test.mjs","start":{"line":498,"column":18},"end":{"line":498,"column":18}},"args":[{"id":"=","kind":"builtin","val":"=","loc":{"source":"test/meta-test.mjs","start":{"line":498,"column":23},"end":{"line":498,"column":34}},"args":[{"id":"<vTagDeclaration>","kind":"tag","val":"i","loc":{"source":"test/meta-test.mjs","start":{"line":498,"column":24},"end":{"line":498,"column":29}},"args":[]},{"id":"<value>","kind":"value","val":0,"loc":{"source":"test/meta-test.mjs","start":{"line":498,"column":33},"end":{"line":498,"column":33}},"args":[]}]},{"id":"if","kind":"builtin","val":"if","loc":{"source":"test/meta-test.mjs","start":{"line":499,"column":6},"end":{"line":504,"column":4}},"args":[{"id":"<","kind":"builtin","val":"<","loc":{"source":"test/meta-test.mjs","start":{"line":499,"column":9},"end":{"line":499,"column":31}},"args":[{"id":"<vTag>","kind":"tag","val":"i","loc":{"source":"test/meta-test.mjs","start":{"line":499,"column":10},"end":{"line":499,"column":11}},"args":[]},{"id":".","kind":"builtin","val":".","loc":{"source":"test/meta-test.mjs","start":{"line":499,"column":24},"end":{"line":499,"column":24}},"args":[{"id":"<tag>","kind":"tag","val":"unquote1","loc":{"source":"test/meta-test.mjs","start":{"line":499,"column":15},"end":{"line":499,"column":23}},"args":[]},{"id":"<name>","kind":"tag","val":"length","loc":{"source":"test/meta-test.mjs","start":{"line":499,"column":25},"end":{"line":499,"column":25}},"args":[]}]}]},{"id":"<tuple>","kind":"builtin","val":null,"loc":{"source":"test/meta-test.mjs","start":{"line":500,"column":8},"end":{"line":502,"column":6}},"args":[{"id":"yield","kind":"macro","val":"yield","loc":{"source":"test/meta-test.mjs","start":{"line":500,"column":8},"end":{"line":500,"column":8}},"args":[{"id":"<vTag>","kind":"tag","val":"i","loc":{"source":"test/meta-test.mjs","start":{"line":500,"column":14},"end":{"line":500,"column":15}},"args":[]}]},{"id":"next","kind":"builtin","val":"next","loc":{"source":"test/meta-test.mjs","start":{"line":501,"column":8},"end":{"line":501,"column":8}},"args":[{"id":"+","kind":"builtin","val":"+","loc":{"source":"test/meta-test.mjs","start":{"line":501,"column":13},"end":{"line":501,"column":20}},"args":[{"id":"<vTag>","kind":"tag","val":"i","loc":{"source":"test/meta-test.mjs","start":{"line":501,"column":14},"end":{"line":501,"column":15}},"args":[]},{"id":"<value>","kind":"value","val":1,"loc":{"source":"test/meta-test.mjs","start":{"line":501,"column":19},"end":{"line":501,"column":19}},"args":[]}]}]}]},{"id":"end","kind":"builtin","val":"end","loc":{"source":"test/meta-test.mjs","start":{"line":503,"column":8},"end":{"line":504,"column":4}},"args":[]}]}]}');
                        codeTag0.replaceTag('unquote1', array);
                        _$4 = codeTag0;
                        break _$5;
                    }
                    result = _$4;
                    result.resolveVirtual();
                    _$2 = result;
                    break _$3;
                }
                return _$2;
            }
        }));
        _$0 = null;
        break _$1;
    }
    return _$0;
};
 +++ jsCode: __$result__function$__ = function (ast) {
    var _$0;
    _$1: {
        ast.defineSymbol(ast.createMacro('..', 'binary', 'LOW', {
            'expand': function (ast) {
                var limit, start, result, _$2, _$4, codeTag0;
                _$3: {
                    limit = ast.at(1);
                    start = ast.at(0);
                    _$5: {
                        codeTag0 = ast.fromJsonString('{"id":"loop","kind":"builtin","val":"loop","loc":{"source":"test/meta-test.mjs","start":{"line":511,"column":18},"end":{"line":511,"column":18}},"args":[{"id":"=","kind":"builtin","val":"=","loc":{"source":"test/meta-test.mjs","start":{"line":511,"column":23},"end":{"line":511,"column":42}},"args":[{"id":"<vTagDeclaration>","kind":"tag","val":"i","loc":{"source":"test/meta-test.mjs","start":{"line":511,"column":24},"end":{"line":511,"column":29}},"args":[]},{"id":"<tag>","kind":"tag","val":"unquote1","loc":{"source":"test/meta-test.mjs","start":{"line":511,"column":33},"end":{"line":511,"column":41}},"args":[]}]},{"id":"if","kind":"builtin","val":"if","loc":{"source":"test/meta-test.mjs","start":{"line":512,"column":6},"end":{"line":517,"column":4}},"args":[{"id":"<=","kind":"builtin","val":"<=","loc":{"source":"test/meta-test.mjs","start":{"line":512,"column":9},"end":{"line":512,"column":25}},"args":[{"id":"<vTag>","kind":"tag","val":"i","loc":{"source":"test/meta-test.mjs","start":{"line":512,"column":10},"end":{"line":512,"column":11}},"args":[]},{"id":"<tag>","kind":"tag","val":"unquote2","loc":{"source":"test/meta-test.mjs","start":{"line":512,"column":16},"end":{"line":512,"column":24}},"args":[]}]},{"id":"<tuple>","kind":"builtin","val":null,"loc":{"source":"test/meta-test.mjs","start":{"line":513,"column":8},"end":{"line":515,"column":6}},"args":[{"id":"yield","kind":"macro","val":"yield","loc":{"source":"test/meta-test.mjs","start":{"line":513,"column":8},"end":{"line":513,"column":8}},"args":[{"id":"<vTag>","kind":"tag","val":"i","loc":{"source":"test/meta-test.mjs","start":{"line":513,"column":14},"end":{"line":513,"column":15}},"args":[]}]},{"id":"next","kind":"builtin","val":"next","loc":{"source":"test/meta-test.mjs","start":{"line":514,"column":8},"end":{"line":514,"column":8}},"args":[{"id":"+","kind":"builtin","val":"+","loc":{"source":"test/meta-test.mjs","start":{"line":514,"column":13},"end":{"line":514,"column":20}},"args":[{"id":"<vTag>","kind":"tag","val":"i","loc":{"source":"test/meta-test.mjs","start":{"line":514,"column":14},"end":{"line":514,"column":15}},"args":[]},{"id":"<value>","kind":"value","val":1,"loc":{"source":"test/meta-test.mjs","start":{"line":514,"column":19},"end":{"line":514,"column":19}},"args":[]}]}]}]},{"id":"end","kind":"builtin","val":"end","loc":{"source":"test/meta-test.mjs","start":{"line":516,"column":8},"end":{"line":517,"column":4}},"args":[]}]}]}');
                        codeTag0.replaceTag('unquote1', start);
                        codeTag0.replaceTag('unquote2', limit);
                        _$4 = codeTag0;
                        break _$5;
                    }
                    result = _$4;
                    result.resolveVirtual();
                    _$2 = result;
                    break _$3;
                }
                return _$2;
            }
        }));
        _$0 = null;
        break _$1;
    }
    return _$0;
};
 +++ jsCode: __$result__function$__ = function (ast) {
    var concat, _$0;
    _$1: {
        concat = ast.createMacro('#concat', 'zero', 'NONE', {
            'expandCall': function (ast) {
                var _$2, _$4, codeTag0;
                _$3: {
                    ast.at(1).asTuple();
                    _$5: {
                        codeTag0 = ast.fromJsonString('{"id":"<call>","kind":"builtin","val":null,"loc":{"source":"test/meta-test.mjs","start":{"line":561,"column":20},"end":{"line":561,"column":32}},"args":[{"id":".","kind":"builtin","val":".","loc":{"source":"test/meta-test.mjs","start":{"line":561,"column":13},"end":{"line":561,"column":13}},"args":[{"id":"<value>","kind":"value","val":"","loc":{"source":"test/meta-test.mjs","start":{"line":561,"column":11},"end":{"line":561,"column":12}},"args":[]},{"id":"<name>","kind":"tag","val":"concat","loc":{"source":"test/meta-test.mjs","start":{"line":561,"column":14},"end":{"line":561,"column":14}},"args":[]}]},{"id":"<tag>","kind":"tag","val":"unquote1","loc":{"source":"test/meta-test.mjs","start":{"line":561,"column":20},"end":{"line":561,"column":32}},"args":[]}]}');
                        codeTag0.replaceTag('unquote1', ast.at(1));
                        _$4 = codeTag0;
                        break _$5;
                    }
                    _$2 = _$4;
                    break _$3;
                }
                return _$2;
            }
        });
        ast.keyScope.set(concat.id, concat);
        _$0 = null;
        break _$1;
    }
    return _$0;
};
 +++ jsCode: __$result__function$__ = function (ast) {
    var path, sourceName, sourceDir, e, _$0;
    _$1: {
        try {
            _$2: {
                _$3: {
                    path = require('path');
                    sourceName = ast.compiler.parser.source;
                    sourceDir = path.dirname(sourceName);
                }
                require(path.resolve(sourceDir, 'meta-module'))(ast);
            }
        } catch (e) {
            ast.error('Error importing module: ' + e.toString());
        }
        _$0 = null;
        break _$1;
    }
    return _$0;
};
 *** now: IN 
now
  (log((#val 4)), caller(async()))
  then
    ->
      ()
      do
        log((#val 5))
        activityLog.should.have.length((#val 6))
        loop
          (var i) = (#val 0)
          if
            #cond i < activityLog.length
            (activityLog[i].should.equal(i), next(+(i, (#val 1))))
            else end()
 *** now: OUT
 *** now: IN 
now
  (log((#val 0)), caller(async(log1)))
  when(log1, ->((), do(log((#val 1)), caller(async(log2)))))
  when(log2, ->((), do(log((#val 2)), caller(async()))))
  then
    ->
      ()
      do
        log((#val 3))
        do
          (var \thenCallback) = null
          do
            #()
              log((#val 4))
              #call caller
                (\thenCallback)
                ->
                  ()
                  do
                    log((#val 5))
                    activityLog.should.have.length((#val 6))
                    loop
                      (var i) = (#val 0)
                      if
                        #cond i < activityLog.length
                        (activityLog[i].should.equal(i), next(+(i, (#val 1))))
                        else end()
 *** now: OUT
